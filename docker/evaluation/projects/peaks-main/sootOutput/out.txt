Soot started on Mon Jul 08 10:13:49 CEST 2013
Warning: javax.jms.TopicConnection is a phantom class!
Warning: javax.jms.JMSException is a phantom class!
Warning: javax.jms.Message is a phantom class!
Warning: javax.jms.Topic is a phantom class!
Warning: javax.jms.TopicConnectionFactory is a phantom class!
Warning: javax.jms.TopicPublisher is a phantom class!
Warning: javax.jms.TopicSession is a phantom class!
Warning: javax.jms.ObjectMessage is a phantom class!
Warning: javax.jms.MessageListener is a phantom class!
Warning: javax.jms.TopicSubscriber is a phantom class!
Warning: javax.mail.Authenticator is a phantom class!
Warning: javax.mail.PasswordAuthentication is a phantom class!
Warning: javax.mail.internet.AddressException is a phantom class!
Warning: javax.mail.internet.MimeUtility is a phantom class!
Warning: javax.mail.Transport is a phantom class!
Warning: javax.mail.Message$RecipientType is a phantom class!
Warning: javax.mail.internet.MimeMultipart is a phantom class!
Warning: javax.mail.internet.MimeBodyPart is a phantom class!
Warning: javax.mail.Session is a phantom class!
Warning: javax.mail.Address is a phantom class!
Warning: javax.mail.internet.InternetHeaders is a phantom class!
Warning: javax.mail.MessagingException is a phantom class!
Warning: javax.mail.internet.MimeMessage is a phantom class!
Warning: javax.mail.internet.InternetAddress is a phantom class!
Warning: javax.mail.Multipart is a phantom class!
Warning: javax.mail.BodyPart is a phantom class!
Warning: javax.mail.Message is a phantom class!
Warning: javax.jms.Destination is a phantom class!
No main class given. Inferred 'org.apache.log4j.chainsaw.Main' as main class.
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 0.4 seconds.
[Spark] Solution found in 0.4 seconds.
1820 class(es) loaded.

Static public Fields found:
<org.apache.log4j.Level: org.apache.log4j.Level FATAL>
<org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn LOCATION>
<org.apache.log4j.Level: org.apache.log4j.Level WARN>
<org.apache.log4j.Level: org.apache.log4j.Level ERROR>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel DEBUG>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel INFO>
<org.apache.log4j.helpers.MDCKeySetExtractor: org.apache.log4j.helpers.MDCKeySetExtractor INSTANCE>
<org.apache.log4j.Level: org.apache.log4j.Level ALL>
<org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn DATE>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel SEVERE>
<org.apache.log4j.Level: org.apache.log4j.Level OFF>
<org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel SEVERE>
<org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn THREAD>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINE>
<org.apache.log4j.Level: org.apache.log4j.Level INFO>
<org.apache.log4j.spi.LocationInfo: org.apache.log4j.spi.LocationInfo NA_LOCATION_INFO>
<org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn THROWN>
<org.apache.log4j.Priority: org.apache.log4j.Priority ERROR>
<org.apache.log4j.chainsaw.ExitAction: org.apache.log4j.chainsaw.ExitAction INSTANCE>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel CONFIG>
<org.apache.log4j.Level: org.apache.log4j.Level DEBUG>
<org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINEST>
<org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn LEVEL>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINER>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel ERROR>
<org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn MESSAGE>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel WARNING>
<org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn CATEGORY>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FATAL>
<org.apache.log4j.Priority: org.apache.log4j.Priority WARN>
<org.apache.log4j.Priority: org.apache.log4j.Priority DEBUG>
<org.apache.log4j.Priority: org.apache.log4j.Priority FATAL>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINEST>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel WARN>
<org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn NDC>
<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: java.awt.Color FATAL_CHILDREN>
<org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel WARNING>
<org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel CONFIG>
<org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINER>
<org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel FINE>
<org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn MESSAGE_NUM>
<org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel INFO>
<org.apache.log4j.Priority: org.apache.log4j.Priority INFO>
<org.apache.log4j.Level: org.apache.log4j.Level TRACE>

Static protected Fields found:
<org.apache.log4j.config.PropertyGetter: java.lang.Object[] NULL_ARG>
<org.apache.log4j.LogXF: org.apache.log4j.Level TRACE>
<org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor _defaultLogMonitor>
<org.apache.log4j.lf5.LogRecord: long _seqCount>
<org.apache.log4j.helpers.LogLog: boolean debugEnabled>
<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.ImageIcon _sat>
<org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.AppenderFinalizer _finalizer>
<org.apache.log4j.lf5.viewer.LogFactor5Dialog: java.awt.Font DISPLAY_FONT>

Static default visibility Fields found:
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$IntegerPatternConverter>
<org.apache.log4j.helpers.OptionConverter: java.lang.Class class$org$apache$log4j$spi$Configurator>
<org.apache.log4j.spi.LoggingEvent: java.lang.Class class$org$apache$log4j$Level>
<org.apache.log4j.config.PropertySetter: java.lang.Class class$java$lang$String>
<org.apache.log4j.helpers.OptionConverter: int DELIM_START_LEN>
<org.apache.log4j.Level: java.lang.Class class$org$apache$log4j$Level>
<org.apache.log4j.jmx.LoggerDynamicMBean: java.lang.Class class$org$apache$log4j$Appender>
<org.apache.log4j.chainsaw.ExitAction: java.lang.Class class$org$apache$log4j$chainsaw$ExitAction>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$ThrowableInformationPatternConverter>
<org.apache.log4j.net.SocketServer: java.lang.String CONFIG_FILE_EXT>
<org.apache.log4j.pattern.LogEvent: java.lang.Class class$org$apache$log4j$Level>
<org.apache.log4j.net.SocketServer: java.lang.Class class$org$apache$log4j$net$SocketServer>
<org.apache.log4j.or.RendererMap: org.apache.log4j.or.ObjectRenderer defaultRenderer>
<org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$org$apache$log4j$chainsaw$MyTableModel>
<org.apache.log4j.helpers.OptionConverter: java.lang.Class class$org$apache$log4j$Level>
<org.apache.log4j.varia.Roller: java.lang.String host>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$FileDatePatternConverter>
<org.apache.log4j.net.SimpleSocketServer: org.apache.log4j.Logger cat>
<org.apache.log4j.pattern.LogEvent: java.lang.Class[] TO_LEVEL_PARAMS>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$LineSeparatorPatternConverter>
<org.apache.log4j.helpers.Loader: java.lang.Class class$org$apache$log4j$helpers$Loader>
<org.apache.log4j.xml.DOMConfigurator: java.lang.Class[] ONE_STRING_PARAM>
<org.apache.log4j.jmx.LayoutDynamicMBean: java.lang.Class class$org$apache$log4j$Level>
<org.apache.log4j.jmx.AppenderDynamicMBean: java.lang.Class class$org$apache$log4j$Layout>
<org.apache.log4j.jmx.LayoutDynamicMBean: java.lang.Class class$java$lang$String>
<org.apache.log4j.LogMF: java.lang.Class class$org$apache$log4j$LogMF>
<org.apache.log4j.config.PropertySetter: java.lang.Class class$org$apache$log4j$Priority>
<org.apache.log4j.or.RendererMap: java.lang.Class class$org$apache$log4j$or$ObjectRenderer>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$PropertiesPatternConverter>
<org.apache.log4j.PropertyConfigurator: java.lang.Class class$org$apache$log4j$Appender>
<org.apache.log4j.xml.DOMConfigurator: java.lang.Class class$org$apache$log4j$spi$LoggerFactory>
<org.apache.log4j.jmx.LayoutDynamicMBean: java.lang.Class class$org$apache$log4j$jmx$LayoutDynamicMBean>
<org.apache.log4j.rewrite.ReflectionRewritePolicy: java.lang.Class class$java$lang$Object>
<org.apache.log4j.EnhancedThrowableRenderer: java.lang.Class class$java$lang$Throwable>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$ThreadPatternConverter>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$NDCPatternConverter>
<org.apache.log4j.net.SimpleSocketServer: int port>
<org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.Class class$org$apache$log4j$spi$LoggingEvent>
<org.apache.log4j.rewrite.RewriteAppender: java.lang.Class class$org$apache$log4j$rewrite$RewritePolicy>
<org.apache.log4j.jmx.LoggerDynamicMBean: java.lang.Class class$org$apache$log4j$jmx$LoggerDynamicMBean>
<org.apache.log4j.jmx.AppenderDynamicMBean: java.lang.Class class$java$lang$String>
<org.apache.log4j.Category: java.lang.Class class$org$apache$log4j$Category>
<org.apache.log4j.helpers.PatternParser: java.lang.Class class$java$text$DateFormat>
<org.apache.log4j.config.PropertySetter: java.lang.Class class$org$apache$log4j$spi$OptionHandler>
<org.apache.log4j.xml.DOMConfigurator: java.lang.Class class$org$apache$log4j$spi$ErrorHandler>
<org.apache.log4j.spi.LocationInfo: boolean inVisualAge>
<org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$FullLocationPatternConverter>
<org.apache.log4j.lf5.DefaultLF5Configurator: java.lang.Class class$org$apache$log4j$lf5$DefaultLF5Configurator>
<org.apache.log4j.net.SocketNode: java.lang.Class class$org$apache$log4j$net$SocketNode>
<org.apache.log4j.PropertyConfigurator: java.lang.Class class$org$apache$log4j$spi$LoggerFactory>
<org.apache.log4j.MDC: java.lang.Class class$java$lang$ThreadLocal>
<org.apache.log4j.Logger: java.lang.Class class$org$apache$log4j$Logger>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$MessagePatternConverter>
<org.apache.log4j.DailyRollingFileAppender: java.util.TimeZone gmtTimeZone>
<org.apache.log4j.jmx.AppenderDynamicMBean: java.lang.Class class$org$apache$log4j$Priority>
<org.apache.log4j.CategoryKey: java.lang.Class class$org$apache$log4j$CategoryKey>
<org.apache.log4j.helpers.SyslogWriter: java.lang.String syslogHost>
<org.apache.log4j.spi.LoggingEvent: java.util.Hashtable methodCache>
<org.apache.log4j.helpers.OptionConverter: char DELIM_STOP>
<org.apache.log4j.config.PropertyGetter: java.lang.Class class$org$apache$log4j$Priority>
<org.apache.log4j.LogXF: java.lang.Class class$org$apache$log4j$LogXF>
<org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$util$Hashtable>
<org.apache.log4j.spi.LocationInfo: java.lang.Class class$java$lang$Throwable>
<org.apache.log4j.chainsaw.DetailPanel: java.lang.Class class$org$apache$log4j$chainsaw$DetailPanel>
<org.apache.log4j.net.SocketServer: int port>
<org.apache.log4j.chainsaw.LoadXMLAction: java.lang.Class class$org$apache$log4j$chainsaw$LoadXMLAction>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$DatePatternConverter>
<org.apache.log4j.varia.Roller: java.lang.Class class$org$apache$log4j$varia$Roller>
<org.apache.log4j.config.PropertyGetter: java.lang.Class class$java$lang$String>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$SequenceNumberPatternConverter>
<org.apache.log4j.jmx.Agent: java.lang.Class class$org$apache$log4j$jmx$Agent>
<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener>
<org.apache.log4j.net.SocketServer: org.apache.log4j.net.SocketServer server>
<org.apache.log4j.NDC: int pushCounter>
<org.apache.log4j.NDC: java.util.Hashtable ht>
<org.apache.log4j.PropertyConfigurator: java.lang.Class class$org$apache$log4j$spi$ThrowableRenderer>
<org.apache.log4j.net.SocketServer: org.apache.log4j.Logger cat>
<org.apache.log4j.xml.DOMConfigurator: java.lang.Class class$org$apache$log4j$spi$Filter>
<org.apache.log4j.PropertyConfigurator: java.lang.Class class$org$apache$log4j$spi$ErrorHandler>
<org.apache.log4j.xml.DOMConfigurator: java.lang.Class class$java$lang$String>
<org.apache.log4j.PropertyConfigurator: java.lang.Class class$org$apache$log4j$spi$Filter>
<org.apache.log4j.jmx.AppenderDynamicMBean: java.lang.Class class$org$apache$log4j$jmx$AppenderDynamicMBean>
<org.apache.log4j.net.JMSSink: org.apache.log4j.Logger logger>
<org.apache.log4j.jmx.LayoutDynamicMBean: java.lang.Class class$org$apache$log4j$Priority>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$LoggerPatternConverter>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$MethodLocationPatternConverter>
<org.apache.log4j.chainsaw.Main: java.lang.Class class$org$apache$log4j$chainsaw$Main>
<org.apache.log4j.varia.Roller: int port>
<org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$java$lang$Boolean>
<org.apache.log4j.config.PropertySetter: java.lang.Class class$org$apache$log4j$spi$ErrorHandler>
<org.apache.log4j.pattern.LogEvent: java.util.Hashtable methodCache>
<org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$util$Map>
<org.apache.log4j.chainsaw.LoggingReceiver: java.lang.Class class$org$apache$log4j$chainsaw$LoggingReceiver>
<org.apache.log4j.PropertyConfigurator: java.lang.Class class$org$apache$log4j$Layout>
<org.apache.log4j.spi.LoggingEvent: java.lang.Class[] TO_LEVEL_PARAMS>
<org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$java$lang$Object>
<org.apache.log4j.helpers.Loader: java.lang.Class class$java$lang$Thread>
<org.apache.log4j.net.SimpleSocketServer: java.lang.Class class$org$apache$log4j$net$SimpleSocketServer>
<org.apache.log4j.net.SMTPAppender: java.lang.Class class$org$apache$log4j$spi$TriggeringEventEvaluator>
<org.apache.log4j.net.SocketServer: java.lang.String GENERIC>
<org.apache.log4j.helpers.OptionConverter: java.lang.Class class$java$lang$String>
<org.apache.log4j.HTMLLayout: java.lang.String TRACE_PREFIX>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$LevelPatternConverter>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$FileLocationPatternConverter>
<org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.Class class$org$apache$log4j$pattern$LogEvent>
<org.apache.log4j.jmx.HierarchyDynamicMBean: java.lang.Class class$org$apache$log4j$jmx$HierarchyDynamicMBean>
<org.apache.log4j.LogSF: java.lang.Class class$org$apache$log4j$LogSF>
<org.apache.log4j.helpers.OptionConverter: java.lang.String DELIM_START>
<org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$java$lang$String>
<org.apache.log4j.helpers.PatternConverter: java.lang.String[] SPACES>
<org.apache.log4j.net.JMSSink: java.lang.Class class$org$apache$log4j$net$JMSSink>
<org.apache.log4j.helpers.OptionConverter: int DELIM_STOP_LEN>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$ClassNamePatternConverter>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$LineLocationPatternConverter>
<org.apache.log4j.chainsaw.ControlPanel: java.lang.Class class$org$apache$log4j$chainsaw$ControlPanel>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$org$apache$log4j$pattern$RelativeTimePatternConverter>
<org.apache.log4j.MDC: org.apache.log4j.MDC mdc>
<org.apache.log4j.jmx.Agent: org.apache.log4j.Logger log>
<org.apache.log4j.varia.Roller: org.apache.log4j.Logger cat>

Static immutable Fields of any Visibility found:
<org.apache.log4j.xml.DOMConfigurator: java.lang.String LOGGER>
<org.apache.log4j.LogManager: java.lang.String DEFAULT_XML_CONFIGURATION_FILE>
<org.apache.log4j.helpers.AbsoluteTimeDateFormat: java.lang.String ISO8601_DATE_FORMAT>
<org.apache.log4j.lf5.viewer.LogTableColumn: long serialVersionUID>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String APPENDER_REF_TAG>
<org.apache.log4j.spi.ErrorCode: int CLOSE_FAILURE>
<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditorRenderer: long serialVersionUID>
<org.apache.log4j.pattern.DatePatternConverter: java.lang.String ISO8601_PATTERN>
<org.apache.log4j.helpers.PatternParser: int LEVEL_CONVERTER>
<org.apache.log4j.DailyRollingFileAppender: int TOP_OF_TROUBLE>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String CONFIG_FILE_NAME>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String OLD_CONFIGURATION_TAG>
<org.apache.log4j.ProvisionNode: long serialVersionUID>
<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String CONFIG_FILE_NAME>
<org.apache.log4j.helpers.PatternParser: int RELATIVE_TIME_CONVERTER>
<org.apache.log4j.Layout: java.lang.String LINE_SEP>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String RESET_ATTR>
<org.apache.log4j.helpers.PatternParser: int FULL_LOCATION_CONVERTER>
<org.apache.log4j.lf5.viewer.LogTableColumnFormatException: long serialVersionUID>
<org.apache.log4j.LogMF: java.lang.String FQCN>
<org.apache.log4j.helpers.PatternParser: int THREAD_CONVERTER>
<org.apache.log4j.helpers.UtilLoggingLevel: int FINEST_INT>
<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode: long serialVersionUID>
<org.apache.log4j.PropertyConfigurator: java.lang.String RESET_KEY>
<org.apache.log4j.lf5.viewer.LogTable: long serialVersionUID>
<org.apache.log4j.spi.ErrorCode: int GENERIC_FAILURE>
<org.apache.log4j.EnhancedPatternLayout: java.lang.String TTCC_CONVERSION_PATTERN>
<org.apache.log4j.helpers.UtilLoggingLevel: int UNKNOWN_INT>
<org.apache.log4j.helpers.UtilLoggingLevel: int SEVERE_INT>
<org.apache.log4j.xml.Log4jEntityResolver: java.lang.String PUBLIC_ID>
<org.apache.log4j.net.SyslogAppender: int LOG_KERN>
<org.apache.log4j.spi.ErrorCode: int FLUSH_FAILURE>
<org.apache.log4j.lf5.util.LogFileParser: java.lang.String ATTRIBUTE_DELIMITER>
<org.apache.log4j.lf5.viewer.LogTableRowRenderer: long serialVersionUID>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String CATEGORY_FACTORY_TAG>
<org.apache.log4j.PropertyConfigurator: java.lang.String FACTORY_PREFIX>
<org.apache.log4j.helpers.Transform: java.lang.String CDATA_EMBEDED_END>
<org.apache.log4j.pattern.PatternParser: int LITERAL_STATE>
<org.apache.log4j.pattern.CachedDateFormat: java.lang.String ZERO_STRING>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String PARAM_TAG>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String LEVEL>
<org.apache.log4j.PropertyConfigurator: java.lang.String LOGGER_FACTORY_KEY>
<org.apache.log4j.net.SocketAppender: int RESET_FREQUENCY>
<org.apache.log4j.pattern.CachedDateFormat: int MAGIC2>
<org.apache.log4j.ConsoleAppender: java.lang.String SYSTEM_ERR>
<org.apache.log4j.pattern.DatePatternConverter: java.lang.String DATE_AND_TIME_PATTERN>
<org.apache.log4j.varia.ExternallyRolledFileAppender: java.lang.String ROLL_OVER>
<org.apache.log4j.Priority: int ERROR_INT>
<org.apache.log4j.varia.StringMatchFilter: java.lang.String STRING_TO_MATCH_OPTION>
<org.apache.log4j.spi.Filter: int NEUTRAL>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String LAYOUT_TAG>
<org.apache.log4j.ConsoleAppender: java.lang.String SYSTEM_OUT>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String INTERNAL_DEBUG_ATTR>
<org.apache.log4j.AsyncAppender: int DEFAULT_BUFFER_SIZE>
<org.apache.log4j.DailyRollingFileAppender: int HALF_DAY>
<org.apache.log4j.lf5.util.LogFileParser: java.lang.String RECORD_DELIMITER>
<org.apache.log4j.helpers.Transform: java.lang.String CDATA_PSEUDO_END>
<org.apache.log4j.NDC: int REAP_THRESHOLD>
<org.apache.log4j.DailyRollingFileAppender: int TOP_OF_WEEK>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String COLUMN>
<org.apache.log4j.helpers.LogLog: java.lang.String DEBUG_KEY>
<org.apache.log4j.helpers.UtilLoggingLevel: int WARNING_INT>
<org.apache.log4j.pattern.CachedDateFormat: int NO_MILLISECONDS>
<org.apache.log4j.HTMLLayout: java.lang.String TITLE_OPTION>
<org.apache.log4j.pattern.PatternParser: char ESCAPE_CHAR>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String EMPTY_STR>
<org.apache.log4j.helpers.UtilLoggingLevel: int FINER_INT>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String RED>
<org.apache.log4j.net.SyslogAppender: int LOG_AUTH>
<org.apache.log4j.helpers.AbsoluteTimeDateFormat: java.lang.String DATE_AND_TIME_DATE_FORMAT>
<org.apache.log4j.spi.LoggingEvent: long serialVersionUID>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String PATH>
<org.apache.log4j.net.SyslogAppender: int LOG_LOCAL4>
<org.apache.log4j.lf5.util.StreamUtils: int DEFAULT_BUFFER_SIZE>
<org.apache.log4j.PropertyConfigurator: java.lang.String APPENDER_PREFIX>
<org.apache.log4j.net.SyslogAppender: int LOG_LOCAL3>
<org.apache.log4j.helpers.Loader: java.lang.String TSTR>
<org.apache.log4j.PropertyConfigurator: java.lang.String LOGGER_REF>
<org.apache.log4j.lf5.util.LogFileParser: java.lang.String CATEGORY_DELIMITER>
<org.apache.log4j.net.SocketHubAppender: java.lang.String ZONE>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String ROOT_TAG>
<org.apache.log4j.pattern.PatternParser: int MIN_STATE>
<org.apache.log4j.net.SyslogAppender: int LOG_CRON>
<org.apache.log4j.PropertyConfigurator: java.lang.String CATEGORY_PREFIX>
<org.apache.log4j.net.SyslogAppender: int LOG_MAIL>
<org.apache.log4j.net.SyslogAppender: int LOG_LOCAL7>
<org.apache.log4j.Priority: int OFF_INT>
<org.apache.log4j.PropertyConfigurator: java.lang.String INTERNAL_ROOT_NAME>
<org.apache.log4j.EnhancedPatternLayout: java.lang.String DEFAULT_CONVERSION_PATTERN>
<org.apache.log4j.lf5.viewer.configure.MRUFileManager: int DEFAULT_MAX_SIZE>
<org.apache.log4j.pattern.PatternParser: int MAX_STATE>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String NAME>
<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel: long serialVersionUID>
<org.apache.log4j.spi.ErrorCode: int ADDRESS_PARSE_FAILURE>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String BLUE>
<org.apache.log4j.helpers.DateLayout: java.lang.String RELATIVE_TIME_DATE_FORMAT>
<org.apache.log4j.Level: int TRACE_INT>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String CATEGORY>
<org.apache.log4j.spi.Filter: int ACCEPT>
<org.apache.log4j.pattern.PatternParser: int DOT_STATE>
<org.apache.log4j.helpers.PatternParser: int MESSAGE_CONVERTER>
<org.apache.log4j.spi.ErrorCode: int FILE_OPEN_FAILURE>
<org.apache.log4j.helpers.LogLog: java.lang.String WARN_PREFIX>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String RENDERING_CLASS_ATTR>
<org.apache.log4j.pattern.LevelPatternConverter: int TRACE_INT>
<org.apache.log4j.HTMLLayout: java.lang.String LOCATION_INFO_OPTION>
<org.apache.log4j.helpers.PatternParser: int LITERAL_STATE>
<org.apache.log4j.PatternLayout: java.lang.String DEFAULT_CONVERSION_PATTERN>
<org.apache.log4j.LogManager: java.lang.String DEFAULT_INIT_OVERRIDE_KEY>
<org.apache.log4j.DailyRollingFileAppender: int TOP_OF_DAY>
<org.apache.log4j.DailyRollingFileAppender: int TOP_OF_MONTH>
<org.apache.log4j.helpers.PatternParser: int CONVERTER_STATE>
<org.apache.log4j.spi.LoggingEvent: java.lang.String TO_LEVEL>
<org.apache.log4j.helpers.Transform: int CDATA_END_LEN>
<org.apache.log4j.RollingCalendar: long serialVersionUID>
<org.apache.log4j.net.SyslogAppender: int SYSLOG_HOST_OI>
<org.apache.log4j.chainsaw.XMLFileHandler: java.lang.String TAG_EVENT>
<org.apache.log4j.helpers.PatternParser: int MIN_STATE>
<org.apache.log4j.net.SyslogAppender: int LOG_DAEMON>
<org.apache.log4j.net.SyslogAppender: int LOG_LOCAL6>
<org.apache.log4j.helpers.UtilLoggingLevel: long serialVersionUID>
<org.apache.log4j.lf5.util.LogFileParser: java.lang.String NDC_DELIMITER>
<org.apache.log4j.spi.Configurator: java.lang.String NULL>
<org.apache.log4j.lf5.util.LogFileParser: java.lang.String DATE_DELIMITER>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String EXPANDED>
<org.apache.log4j.chainsaw.Main: java.lang.String PORT_PROP_NAME>
<org.apache.log4j.chainsaw.Main: int DEFAULT_PORT>
<org.apache.log4j.MDC: int HT_SIZE>
<org.apache.log4j.PatternLayout: java.lang.String TTCC_CONVERSION_PATTERN>
<org.apache.log4j.lf5.util.LogMonitorAdapter: int LOG4J_LOG_LEVELS>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String APPENDER_TAG>
<org.apache.log4j.lf5.util.LogFileParser: java.lang.String MESSAGE_DELIMITER>
<org.apache.log4j.helpers.ISO8601DateFormat: long serialVersionUID>
<org.apache.log4j.spi.ErrorCode: int MISSING_LAYOUT>
<org.apache.log4j.pattern.DatePatternConverter: java.lang.String ISO8601_FORMAT>
<org.apache.log4j.PropertyConfigurator: java.lang.String RENDERER_PREFIX>
<org.apache.log4j.spi.Filter: int DENY>
<org.apache.log4j.spi.LocationInfo: java.lang.String NA>
<org.apache.log4j.helpers.PatternParser: char ESCAPE_CHAR>
<org.apache.log4j.LogManager: java.lang.String DEFAULT_CONFIGURATION_KEY>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String CONFIG_DEBUG_ATTR>
<org.apache.log4j.helpers.Transform: java.lang.String CDATA_START>
<org.apache.log4j.helpers.UtilLoggingLevel: int CONFIG_INT>
<org.apache.log4j.varia.StringMatchFilter: java.lang.String ACCEPT_ON_MATCH_OPTION>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String REF_ATTR>
<org.apache.log4j.helpers.PatternParser: int MAX_STATE>
<org.apache.log4j.Priority: int WARN_INT>
<org.apache.log4j.pattern.PatternParser: int CONVERTER_STATE>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String ROOT_REF>
<org.apache.log4j.net.SyslogAppender: int FACILITY_OI>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String FIRST_CATEGORY_NAME>
<org.apache.log4j.Category: java.lang.String FQCN>
<org.apache.log4j.spi.ErrorCode: int WRITE_FAILURE>
<org.apache.log4j.LogSF: java.lang.String FQCN>
<org.apache.log4j.Priority: int FATAL_INT>
<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: long serialVersionUID>
<org.apache.log4j.helpers.DateLayout: java.lang.String TIMEZONE_OPTION>
<org.apache.log4j.net.SyslogAppender: int LOG_LOCAL2>
<org.apache.log4j.PropertyConfigurator: java.lang.String ROOT_REF>
<org.apache.log4j.DailyRollingFileAppender: int TOP_OF_MINUTE>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String CONFIGURATION_TAG>
<org.apache.log4j.chainsaw.XMLFileHandler: java.lang.String TAG_THROWABLE>
<org.apache.log4j.PropertyConfigurator: java.lang.String APPENDER_REF_TAG>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String NAME_ATTR>
<org.apache.log4j.net.SyslogAppender: int LOG_FTP>
<org.apache.log4j.helpers.LogLog: java.lang.String PREFIX>
<org.apache.log4j.lf5.util.LogFileParser: java.lang.String PRIORITY_DELIMITER>
<org.apache.log4j.chainsaw.XMLFileHandler: java.lang.String TAG_MESSAGE>
<org.apache.log4j.Layout: int LINE_SEP_LEN>
<org.apache.log4j.net.SocketAppender: int DEFAULT_PORT>
<org.apache.log4j.Level: long serialVersionUID>
<org.apache.log4j.DailyRollingFileAppender: int TOP_OF_HOUR>
<org.apache.log4j.lf5.viewer.LogTableModel: long serialVersionUID>
<org.apache.log4j.spi.LocationInfo: long serialVersionUID>
<org.apache.log4j.Logger: java.lang.String FQCN>
<org.apache.log4j.helpers.FileWatchdog: long DEFAULT_DELAY>
<org.apache.log4j.PropertyConfigurator: java.lang.String THROWABLE_RENDERER_PREFIX>
<org.apache.log4j.helpers.PatternParser: int LINE_LOCATION_CONVERTER>
<org.apache.log4j.lf5.util.LogFileParser: java.lang.String LOCATION_DELIMITER>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String LOGGER_REF>
<org.apache.log4j.LogManager: java.lang.String CONFIGURATOR_CLASS_KEY>
<org.apache.log4j.pattern.CachedDateFormat: java.lang.String MAGICSTRING1>
<org.apache.log4j.Priority: int DEBUG_INT>
<org.apache.log4j.net.SyslogAppender: int LOG_SYSLOG>
<org.apache.log4j.PropertyConfigurator: java.lang.String ROOT_LOGGER_PREFIX>
<org.apache.log4j.pattern.FormattingInfo: char[] SPACES>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String LOGGER_FACTORY_TAG>
<org.apache.log4j.helpers.PatternParser: int NDC_CONVERTER>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String VALUE_ATTR>
<org.apache.log4j.helpers.DateLayout: java.lang.String DATE_FORMAT_OPTION>
<org.apache.log4j.helpers.DateLayout: java.lang.String NULL_DATE_FORMAT>
<org.apache.log4j.config.PropertySetterException: long serialVersionUID>
<org.apache.log4j.chainsaw.MyTableModel: org.apache.log4j.chainsaw.EventDetails[] EMPTY_LIST>
<org.apache.log4j.lf5.viewer.LogFactor5InputDialog: int SIZE>
<org.apache.log4j.EnhancedPatternLayout: java.lang.String PATTERN_RULE_REGISTRY>
<org.apache.log4j.chainsaw.XMLFileHandler: java.lang.String TAG_NDC>
<org.apache.log4j.lf5.viewer.LogBrokerMonitor: java.lang.String DETAILED_VIEW>
<org.apache.log4j.net.SyslogAppender: int LOG_AUTHPRIV>
<org.apache.log4j.lf5.util.LogMonitorAdapter: int JDK14_LOG_LEVELS>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String CATEGORY>
<org.apache.log4j.net.SyslogAppender: java.lang.String TAB>
<org.apache.log4j.lf5.util.LogFileParser: java.lang.String THREAD_DELIMITER>
<org.apache.log4j.net.SocketAppender: int DEFAULT_RECONNECTION_DELAY>
<org.apache.log4j.helpers.PatternParser: int DOT_STATE>
<org.apache.log4j.pattern.CachedDateFormat: java.lang.String DIGITS>
<org.apache.log4j.pattern.CachedDateFormat: java.lang.String MAGICSTRING2>
<org.apache.log4j.pattern.CachedDateFormat: int MAGIC1>
<org.apache.log4j.PropertyConfigurator: java.lang.String ADDITIVITY_PREFIX>
<org.apache.log4j.helpers.PatternParser: int FILE_LOCATION_CONVERTER>
<org.apache.log4j.PropertyConfigurator: java.lang.String ROOT_CATEGORY_PREFIX>
<org.apache.log4j.Priority: int ALL_INT>
<org.apache.log4j.spi.ThrowableInformation: long serialVersionUID>
<org.apache.log4j.pattern.LogEvent: long serialVersionUID>
<org.apache.log4j.LogManager: java.lang.String DEFAULT_CONFIGURATION_FILE>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String LEVEL_TAG>
<org.apache.log4j.net.SyslogAppender: int LOG_USER>
<org.apache.log4j.helpers.LogLog: java.lang.String CONFIG_DEBUG_KEY>
<org.apache.log4j.PropertyConfigurator: java.lang.String THRESHOLD_PREFIX>
<org.apache.log4j.Priority: int INFO_INT>
<org.apache.log4j.pattern.LogEvent: java.lang.Integer[] PARAM_ARRAY>
<org.apache.log4j.net.SocketAppender: java.lang.String ZONE>
<org.apache.log4j.net.SyslogAppender: int LOG_NEWS>
<org.apache.log4j.varia.ExternallyRolledFileAppender: java.lang.String OK>
<org.apache.log4j.helpers.UtilLoggingLevel: int FINE_INT>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String ADDITIVITY_ATTR>
<org.apache.log4j.helpers.PatternParser: int CLASS_LOCATION_CONVERTER>
<org.apache.log4j.net.SyslogAppender: int LOG_LPR>
<org.apache.log4j.net.SyslogAppender: int LOG_LOCAL5>
<org.apache.log4j.helpers.AbsoluteTimeDateFormat: java.lang.String ABS_TIME_DATE_FORMAT>
<org.apache.log4j.spi.LoggingEvent: java.lang.Integer[] PARAM_ARRAY>
<org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat: long serialVersionUID>
<org.apache.log4j.PropertyConfigurator: java.lang.String LOGGER_PREFIX>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String ERROR_HANDLER_TAG>
<org.apache.log4j.chainsaw.XMLFileHandler: java.lang.String TAG_LOCATION_INFO>
<org.apache.log4j.net.SocketHubAppender: int DEFAULT_PORT>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String FILTER_TAG>
<org.apache.log4j.spi.Configurator: java.lang.String INHERITED>
<org.apache.log4j.net.SyslogAppender: int LOG_LOCAL1>
<org.apache.log4j.helpers.DateTimeDateFormat: long serialVersionUID>
<org.apache.log4j.net.SyslogAppender: int LOG_UUCP>
<org.apache.log4j.pattern.LogEvent: java.lang.String TO_LEVEL>
<org.apache.log4j.pattern.DatePatternConverter: java.lang.String ABSOLUTE_TIME_PATTERN>
<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree: long serialVersionUID>
<org.apache.log4j.pattern.DatePatternConverter: java.lang.String ABSOLUTE_FORMAT>
<org.apache.log4j.helpers.Transform: java.lang.String CDATA_END>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String THROWABLE_RENDERER_TAG>
<org.apache.log4j.helpers.RelativeTimeDateFormat: long serialVersionUID>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String RENDERED_CLASS_ATTR>
<org.apache.log4j.net.SyslogAppender: int LOG_LOCAL0>
<org.apache.log4j.LogXF: java.lang.String FQCN>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String THRESHOLD_ATTR>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String PRIORITY_TAG>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String RENDERER_TAG>
<org.apache.log4j.chainsaw.MyTableModel: java.lang.String[] COL_NAMES>
<org.apache.log4j.jmx.HierarchyDynamicMBean: java.lang.String ADD_APPENDER>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String GREEN>
<org.apache.log4j.pattern.CachedDateFormat: long serialVersionUID>
<org.apache.log4j.pattern.CachedDateFormat: int UNRECOGNIZED_MILLISECONDS>
<org.apache.log4j.helpers.LogLog: java.lang.String ERR_PREFIX>
<org.apache.log4j.jmx.HierarchyDynamicMBean: java.lang.String THRESHOLD>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String NDCTEXTFILTER>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String CLASS_ATTR>
<org.apache.log4j.helpers.PatternParser: int METHOD_LOCATION_CONVERTER>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String dbfKey>
<org.apache.log4j.pattern.DatePatternConverter: java.lang.String DATE_AND_TIME_FORMAT>
<org.apache.log4j.helpers.AbsoluteTimeDateFormat: long serialVersionUID>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String COLORLEVEL>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String SELECTED>

Static public Methods found:
<org.apache.log4j.helpers.LogLog: void setQuietMode(boolean)>
<org.apache.log4j.helpers.OptionConverter: void selectAndConfigure(java.io.InputStream,java.lang.String,org.apache.log4j.spi.LoggerRepository)>
<org.apache.log4j.Priority: org.apache.log4j.Priority[] getAllPossiblePriorities()>
<org.apache.log4j.lf5.DefaultLF5Configurator: void configure()>
<org.apache.log4j.or.RendererMap: void addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)>
<org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)>
<org.apache.log4j.pattern.FileDatePatternConverter: org.apache.log4j.pattern.PatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.helpers.LogLog: void setInternalDebugging(boolean)>
<org.apache.log4j.LogManager: org.apache.log4j.spi.LoggerRepository getLoggerRepository()>
<org.apache.log4j.LogManager: void setRepositorySelector(org.apache.log4j.spi.RepositorySelector,java.lang.Object)>
<org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>
<org.apache.log4j.lf5.LogRecord: void resetSequenceNumber()>
<org.apache.log4j.lf5.util.AdapterLogRecord: void setSevereLevel(org.apache.log4j.lf5.LogLevel)>
<org.apache.log4j.helpers.OptionConverter: void selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository)>

Static protected Methods found:
<org.apache.log4j.lf5.LogRecord: long getNextId()>
<org.apache.log4j.LogXF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.lf5.LF5Appender: org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance()>
<org.apache.log4j.LogXF: java.lang.Object[] toArray(java.lang.Object)>
<org.apache.log4j.LogXF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogXF: java.lang.Object[] toArray(java.lang.Object,java.lang.Object,java.lang.Object)>

Static default visibility Methods found:
<org.apache.log4j.helpers.Loader: void <clinit>()>
<org.apache.log4j.net.SocketServer: void init(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.log4j.Level: void <clinit>()>
<org.apache.log4j.net.SimpleSocketServer: void init(java.lang.String,java.lang.String)>
<org.apache.log4j.net.SocketServer: void <clinit>()>
<org.apache.log4j.LogXF: void <clinit>()>
<org.apache.log4j.pattern.IntegerPatternConverter: void <clinit>()>
<org.apache.log4j.pattern.FullLocationPatternConverter: void <clinit>()>
<org.apache.log4j.MDC: void <clinit>()>
<org.apache.log4j.net.JMSSink: void <clinit>()>
<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: void <clinit>()>
<org.apache.log4j.or.RendererMap: void <clinit>()>
<org.apache.log4j.net.SocketNode: void <clinit>()>
<org.apache.log4j.chainsaw.LoadXMLAction: void <clinit>()>
<org.apache.log4j.jmx.LoggerDynamicMBean: void <clinit>()>
<org.apache.log4j.lf5.viewer.LogFactor5Dialog: void <clinit>()>
<org.apache.log4j.spi.LocationInfo: void <clinit>()>
<org.apache.log4j.pattern.NameAbbreviator: void <clinit>()>
<org.apache.log4j.chainsaw.MyTableModel: void <clinit>()>
<org.apache.log4j.jmx.LayoutDynamicMBean: void <clinit>()>
<org.apache.log4j.jmx.HierarchyDynamicMBean: void <clinit>()>
<org.apache.log4j.LogMF: void <clinit>()>
<org.apache.log4j.xml.DOMConfigurator: void <clinit>()>
<org.apache.log4j.pattern.ThreadPatternConverter: void <clinit>()>
<org.apache.log4j.net.JMSSink: void usage(java.lang.String)>
<org.apache.log4j.varia.NullAppender: void <clinit>()>
<org.apache.log4j.Layout: void <clinit>()>
<org.apache.log4j.net.SocketAppender: org.apache.log4j.net.SocketAppender$Connector access$002(org.apache.log4j.net.SocketAppender,org.apache.log4j.net.SocketAppender$Connector)>
<org.apache.log4j.spi.LoggingEvent: void <clinit>()>
<org.apache.log4j.jmx.AppenderDynamicMBean: void <clinit>()>
<org.apache.log4j.nt.NTEventLogAppender: void <clinit>()>
<org.apache.log4j.varia.Roller: void init(java.lang.String,java.lang.String)>
<org.apache.log4j.net.SocketHubAppender: java.net.ServerSocket access$002(org.apache.log4j.net.SocketHubAppender,java.net.ServerSocket)>
<org.apache.log4j.helpers.NullEnumeration: void <clinit>()>
<org.apache.log4j.lf5.util.AdapterLogRecord: void <clinit>()>
<org.apache.log4j.LogManager: void <clinit>()>
<org.apache.log4j.pattern.LineSeparatorPatternConverter: void <clinit>()>
<org.apache.log4j.chainsaw.DetailPanel: void <clinit>()>
<org.apache.log4j.varia.Roller: void <clinit>()>
<org.apache.log4j.varia.Roller: void usage(java.lang.String)>
<org.apache.log4j.pattern.SequenceNumberPatternConverter: void <clinit>()>
<org.apache.log4j.chainsaw.Main: void <clinit>()>
<org.apache.log4j.LogSF: void <clinit>()>
<org.apache.log4j.pattern.MethodLocationPatternConverter: void <clinit>()>
<org.apache.log4j.helpers.MDCKeySetExtractor: void <clinit>()>
<org.apache.log4j.net.ZeroConfSupport: void <clinit>()>
<org.apache.log4j.NDC: void <clinit>()>
<org.apache.log4j.pattern.LoggerPatternConverter: void <clinit>()>
<org.apache.log4j.helpers.Transform: void <clinit>()>
<org.apache.log4j.pattern.LogEvent: void <clinit>()>
<org.apache.log4j.Logger: void <clinit>()>
<org.apache.log4j.pattern.MessagePatternConverter: void <clinit>()>
<org.apache.log4j.lf5.viewer.LogTableColumn: void <clinit>()>
<org.apache.log4j.Category: void <clinit>()>
<org.apache.log4j.chainsaw.LoggingReceiver: void <clinit>()>
<org.apache.log4j.helpers.LogLog: void <clinit>()>
<org.apache.log4j.pattern.PatternParser: void <clinit>()>
<org.apache.log4j.pattern.FileLocationPatternConverter: void <clinit>()>
<org.apache.log4j.chainsaw.ControlPanel: void <clinit>()>
<org.apache.log4j.lf5.LogLevel: void <clinit>()>
<org.apache.log4j.net.SimpleSocketServer: void usage(java.lang.String)>
<org.apache.log4j.lf5.util.LogFileParser: void <clinit>()>
<org.apache.log4j.pattern.FormattingInfo: void <clinit>()>
<org.apache.log4j.DailyRollingFileAppender: void <clinit>()>
<org.apache.log4j.helpers.OptionConverter: void <clinit>()>
<org.apache.log4j.pattern.LineLocationPatternConverter: void <clinit>()>
<org.apache.log4j.HTMLLayout: void <clinit>()>
<org.apache.log4j.helpers.PatternConverter: void <clinit>()>
<org.apache.log4j.helpers.UtilLoggingLevel: void <clinit>()>
<org.apache.log4j.pattern.LevelPatternConverter: void <clinit>()>
<org.apache.log4j.helpers.ISO8601DateFormat: void <clinit>()>
<org.apache.log4j.pattern.NDCPatternConverter: void <clinit>()>
<org.apache.log4j.jmx.Agent: void <clinit>()>
<org.apache.log4j.helpers.AbsoluteTimeDateFormat: void <clinit>()>
<org.apache.log4j.chainsaw.ExitAction: void <clinit>()>
<org.apache.log4j.Priority: void <clinit>()>
<org.apache.log4j.lf5.LogRecord: void <clinit>()>
<org.apache.log4j.net.SimpleSocketServer: void <clinit>()>
<org.apache.log4j.net.SocketServer: void usage(java.lang.String)>
<org.apache.log4j.config.PropertyGetter: void <clinit>()>

Static sideeffect free Methods of any Visibility found:
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,short)>
<org.apache.log4j.LogSF: void fatal(org.apache.log4j.Logger,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.xml.DOMConfigurator: void configureAndWatch(java.lang.String,long)>
<org.apache.log4j.pattern.LineSeparatorPatternConverter: org.apache.log4j.pattern.LineSeparatorPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,char)>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.pattern.LoggerPatternConverter: org.apache.log4j.pattern.LoggerPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.helpers.OptionConverter: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.pattern.NameAbbreviator: org.apache.log4j.pattern.NameAbbreviator getAbbreviator(java.lang.String)>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,long)>
<org.apache.log4j.pattern.LineLocationPatternConverter: org.apache.log4j.pattern.LineLocationPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.pattern.CachedDateFormat: int findMillisecondStart(long,java.lang.String,java.text.DateFormat)>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogMF: void fatal(org.apache.log4j.Logger,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>
<org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.chainsaw.MyTableModel access$100(org.apache.log4j.chainsaw.LoggingReceiver)>
<org.apache.log4j.chainsaw.MyTableModel: java.util.SortedSet access$300(org.apache.log4j.chainsaw.MyTableModel)>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,byte)>
<org.apache.log4j.lf5.util.LogMonitorAdapter: int getDefaultMonitorHeight()>
<org.apache.log4j.net.ZeroConfSupport: java.lang.Object getJMDNSInstance()>
<org.apache.log4j.pattern.MessagePatternConverter: org.apache.log4j.pattern.MessagePatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,char)>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,boolean)>
<org.apache.log4j.MDC: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,char)>
<org.apache.log4j.xml.DOMConfigurator: void configureAndWatch(java.lang.String)>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,long)>
<org.apache.log4j.NDC: void inherit(java.util.Stack)>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,double)>
<org.apache.log4j.lf5.LF5Appender: void main(java.lang.String[])>
<org.apache.log4j.LogSF: void fatal(org.apache.log4j.Logger,java.lang.String,java.lang.Object[])>
<org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.Level toLevel(java.lang.String)>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,float)>
<org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>
<org.apache.log4j.CategoryKey: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.net.ZeroConfSupport: java.lang.Object createJmDNSVersion3()>
<org.apache.log4j.chainsaw.DetailPanel: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.Level toLevel(int)>
<org.apache.log4j.lf5.viewer.LF5SwingUtils: void selectRow(int,javax.swing.JTable,javax.swing.JScrollPane)>
<org.apache.log4j.Priority: org.apache.log4j.Priority toPriority(java.lang.String)>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.varia.Roller: void roll()>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,boolean)>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.log4j.NDC: void remove()>
<org.apache.log4j.LogMF: void error(org.apache.log4j.Logger,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,char)>
<org.apache.log4j.Level: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.log4j.chainsaw.MyTableModel: java.util.List access$200(org.apache.log4j.chainsaw.MyTableModel)>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogXF: java.lang.Double valueOf(double)>
<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void createConfigurationDirectory()>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,float)>
<org.apache.log4j.MDC: void put(java.lang.String,java.lang.Object)>
<org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,float)>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,byte)>
<org.apache.log4j.lf5.util.LogMonitorAdapter: int getScreenWidth()>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,long)>
<org.apache.log4j.net.SMTPAppender: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,byte)>
<org.apache.log4j.lf5.viewer.LF5SwingUtils: void repaintLater(javax.swing.JComponent)>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,long)>
<org.apache.log4j.net.JMSSink: void main(java.lang.String[])>
<org.apache.log4j.xml.SAXErrorHandler: void emitMessage(java.lang.String,org.xml.sax.SAXParseException)>
<org.apache.log4j.Category: org.apache.log4j.Category getInstance(java.lang.String)>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,int)>
<org.apache.log4j.helpers.Loader: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Object)>
<org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogXF: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.jmx.LoggerDynamicMBean: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogXF: void throwing(org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.Throwable)>
<org.apache.log4j.lf5.LogLevel: void register(java.util.List)>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,int)>
<org.apache.log4j.lf5.StartLogFactor5: void main(java.lang.String[])>
<org.apache.log4j.Category: org.apache.log4j.Logger exists(java.lang.String)>
<org.apache.log4j.helpers.UtilLoggingLevel: java.util.List getAllPossibleLevels()>
<org.apache.log4j.lf5.LogLevel: void resetLogLevelColorMap()>
<org.apache.log4j.jmx.Agent: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.pattern.PatternParser: int extractOptions(java.lang.String,int,java.util.List)>
<org.apache.log4j.lf5.util.StreamUtils: void copyThenClose(java.io.InputStream,java.io.OutputStream)>
<org.apache.log4j.Logger: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn[] getLogTableColumnArray()>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,int)>
<org.apache.log4j.pattern.IntegerPatternConverter: org.apache.log4j.pattern.IntegerPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.pattern.PatternParser: void parse(java.lang.String,java.util.List,java.util.List,java.util.Map,java.util.Map)>
<org.apache.log4j.PropertyConfigurator: void configureAndWatch(java.lang.String)>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,byte)>
<org.apache.log4j.PropertyConfigurator: void configure(java.io.InputStream)>
<org.apache.log4j.pattern.FullLocationPatternConverter: org.apache.log4j.pattern.FullLocationPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.log4j.chainsaw.LoadXMLAction: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.net.SocketServer: void main(java.lang.String[])>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,char)>
<org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
<org.apache.log4j.helpers.NullEnumeration: org.apache.log4j.helpers.NullEnumeration getInstance()>
<org.apache.log4j.varia.Roller: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogXF: void exiting(org.apache.log4j.Logger,java.lang.String,java.lang.String)>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,byte)>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,byte)>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,double)>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,int)>
<org.apache.log4j.xml.DOMConfigurator: void quietParseUnrecognizedElement(java.lang.Object,org.w3c.dom.Element,java.util.Properties)>
<org.apache.log4j.LogMF: java.lang.String formatObject(java.lang.Object)>
<org.apache.log4j.lf5.util.StreamUtils: void copy(java.io.InputStream,java.io.OutputStream,int)>
<org.apache.log4j.lf5.viewer.LogFactor5InputDialog: javax.swing.JTextField access$000(org.apache.log4j.lf5.viewer.LogFactor5InputDialog)>
<org.apache.log4j.lf5.viewer.LogTableColumn: java.util.List getLogTableColumns()>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogXF: void exiting(org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.Object)>
<org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)>
<org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.pattern.LogEvent: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,int)>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,char)>
<org.apache.log4j.lf5.viewer.LF5SwingUtils: void selectRow(int,javax.swing.ListSelectionModel)>
<org.apache.log4j.varia.NullAppender: org.apache.log4j.varia.NullAppender getNullAppender()>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,boolean)>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,long)>
<org.apache.log4j.LogManager: org.apache.log4j.Logger getRootLogger()>
<org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,int)>
<org.apache.log4j.LogXF: void entering(org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.Object)>
<org.apache.log4j.spi.LocationInfo: void appendFragment(java.lang.StringBuffer,java.lang.String)>
<org.apache.log4j.net.SocketNode: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,short)>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,float)>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,double)>
<org.apache.log4j.NDC: java.util.Stack cloneStack()>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,short)>
<org.apache.log4j.chainsaw.DetailPanel: java.lang.String getThrowableStrRep(org.apache.log4j.chainsaw.EventDetails)>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,byte)>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,java.lang.Object)>
<org.apache.log4j.LogSF: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.lf5.util.AdapterLogRecord: org.apache.log4j.lf5.LogLevel getSevereLevel()>
<org.apache.log4j.net.JMSSink: java.lang.Object lookup(javax.naming.Context,java.lang.String)>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.chainsaw.ControlPanel: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.chainsaw.MyTableModel: boolean access$100(org.apache.log4j.chainsaw.MyTableModel)>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,java.lang.Object)>
<org.apache.log4j.EnhancedThrowableRenderer: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,long)>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,double)>
<org.apache.log4j.LogManager: java.util.Enumeration getCurrentLoggers()>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>
<org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.helpers.UtilLoggingLevel toLevel(int,org.apache.log4j.helpers.UtilLoggingLevel)>
<org.apache.log4j.net.SocketServer: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.PropertyConfigurator: void configure(java.lang.String)>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,double)>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,double)>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,float)>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.varia.Roller: void main(java.lang.String[])>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,float)>
<org.apache.log4j.net.SimpleSocketServer: void main(java.lang.String[])>
<org.apache.log4j.NDC: int getDepth()>
<org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
<org.apache.log4j.chainsaw.ExitAction: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.lf5.LogLevel: java.util.List getJdk14Levels()>
<org.apache.log4j.xml.DOMConfigurator: void configure(java.net.URL)>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.helpers.OptionConverter: java.lang.String substVars(java.lang.String,java.util.Properties)>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,char)>
<org.apache.log4j.net.SimpleSocketServer: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogManager: org.apache.log4j.Logger getLogger(java.lang.String)>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,short)>
<org.apache.log4j.Level: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.net.ZeroConfSupport: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.Throwable,java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,boolean)>
<org.apache.log4j.Category: org.apache.log4j.Category getInstance(java.lang.Class)>
<org.apache.log4j.Priority: org.apache.log4j.Priority toPriority(int)>
<org.apache.log4j.pattern.PatternParser: int finalizeConverter(char,java.lang.String,int,java.lang.StringBuffer,org.apache.log4j.pattern.FormattingInfo,java.util.Map,java.util.Map,java.util.List,java.util.List)>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Object)>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,boolean)>
<org.apache.log4j.pattern.FormattingInfo: org.apache.log4j.pattern.FormattingInfo getDefault()>
<org.apache.log4j.LogXF: java.lang.Long valueOf(long)>
<org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.Throwable,java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.log4j.chainsaw.Main: void initLog4J()>
<org.apache.log4j.xml.DOMConfigurator: void parseUnrecognizedElement(java.lang.Object,org.w3c.dom.Element,java.util.Properties)>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,float)>
<org.apache.log4j.config.PropertySetter: void setProperties(java.lang.Object,java.util.Properties,java.lang.String)>
<org.apache.log4j.LogXF: void entering(org.apache.log4j.Logger,java.lang.String,java.lang.String)>
<org.apache.log4j.Category: org.apache.log4j.spi.LoggerRepository getDefaultHierarchy()>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,short)>
<org.apache.log4j.net.SMTPAppender: java.lang.String access$000(org.apache.log4j.net.SMTPAppender)>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,long)>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,java.lang.Object)>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel valueOf(java.lang.String)>
<org.apache.log4j.NDC: java.util.Stack getCurrentStack()>
<org.apache.log4j.chainsaw.MyTableModel: java.lang.Object access$000(org.apache.log4j.chainsaw.MyTableModel)>
<org.apache.log4j.jmx.AppenderDynamicMBean: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,boolean)>
<org.apache.log4j.jmx.AbstractDynamicMBean: java.lang.String getAppenderName(org.apache.log4j.Appender)>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,char)>
<org.apache.log4j.net.SocketAppender: java.net.InetAddress getAddressByName(java.lang.String)>
<org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String,java.lang.Class)>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,double)>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,short)>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.log4j.spi.LoggingEvent: long getStartTime()>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,short)>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,java.lang.Object)>
<org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn valueOf(java.lang.String)>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,int)>
<org.apache.log4j.BasicConfigurator: void configure()>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,byte)>
<org.apache.log4j.LogSF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Throwable)>
<org.apache.log4j.xml.DOMConfigurator: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,boolean)>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,java.lang.Object[])>
<org.apache.log4j.Level: org.apache.log4j.Level toLevel(java.lang.String)>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,float)>
<org.apache.log4j.or.RendererMap: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogMF: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.pattern.CachedDateFormat: int getMaximumCacheValidity(java.lang.String)>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,java.lang.Object)>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,java.lang.Object)>
<org.apache.log4j.Level: org.apache.log4j.Level toLevel(int)>
<org.apache.log4j.pattern.DatePatternConverter: org.apache.log4j.pattern.DatePatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>
<org.apache.log4j.jmx.HierarchyDynamicMBean: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.lf5.LogLevel: java.util.List getLog4JLevels()>
<org.apache.log4j.BasicConfigurator: void configure(org.apache.log4j.Appender)>
<org.apache.log4j.lf5.viewer.LF5SwingUtils: void makeVerticalScrollBarTrack(javax.swing.JScrollPane)>
<org.apache.log4j.chainsaw.LoggingReceiver: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>
<org.apache.log4j.LogMF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Throwable)>
<org.apache.log4j.rewrite.ReflectionRewritePolicy: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,byte)>
<org.apache.log4j.Priority: org.apache.log4j.Priority toPriority(int,org.apache.log4j.Priority)>
<org.apache.log4j.spi.LocationInfo: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.pattern.LevelPatternConverter: org.apache.log4j.pattern.LevelPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.LogXF: java.lang.Float valueOf(float)>
<org.apache.log4j.pattern.PatternParser: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,double)>
<org.apache.log4j.helpers.Loader: boolean isJava1()>
<org.apache.log4j.Category: java.util.Enumeration getCurrentCategories()>
<org.apache.log4j.LogSF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,int)>
<org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>
<org.apache.log4j.NDC: java.lang.String peek()>
<org.apache.log4j.NDC: java.lang.String get()>
<org.apache.log4j.MDC: void remove(java.lang.String)>
<org.apache.log4j.pattern.LogEvent: long getStartTime()>
<org.apache.log4j.chainsaw.Main: void main(java.lang.String[])>
<org.apache.log4j.pattern.MethodLocationPatternConverter: org.apache.log4j.pattern.MethodLocationPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.LogXF: void entering(org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.log4j.chainsaw.Main: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.lf5.LogLevel: java.util.List getAllDefaultLevels()>
<org.apache.log4j.LogMF: void trace(org.apache.log4j.Logger,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,byte)>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,java.lang.Object)>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,double)>
<org.apache.log4j.config.PropertySetter: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.helpers.LogLog: void debug(java.lang.String,java.lang.Throwable)>
<org.apache.log4j.rewrite.RewriteAppender: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,long)>
<org.apache.log4j.helpers.Loader: java.lang.Class loadClass(java.lang.String)>
<org.apache.log4j.config.PropertyPrinter: void main(java.lang.String[])>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,long)>
<org.apache.log4j.pattern.ThrowableInformationPatternConverter: org.apache.log4j.pattern.ThrowableInformationPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.helpers.OptionConverter: java.lang.String convertSpecialChars(java.lang.String)>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Object[])>
<org.apache.log4j.lf5.viewer.LF5SwingUtils: void makeScrollBarTrack(java.awt.Adjustable)>
<org.apache.log4j.config.PropertyGetter: void getProperties(java.lang.Object,org.apache.log4j.config.PropertyGetter$PropertyCallback,java.lang.String)>
<org.apache.log4j.lf5.LogLevel: void register(org.apache.log4j.lf5.LogLevel[])>
<org.apache.log4j.MDC: void clear()>
<org.apache.log4j.LogManager: org.apache.log4j.Logger getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory)>
<org.apache.log4j.jmx.LayoutDynamicMBean: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.Category: org.apache.log4j.Category getRoot()>
<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.pattern.SequenceNumberPatternConverter: org.apache.log4j.pattern.SequenceNumberPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.xml.DOMConfigurator: void configure(org.w3c.dom.Element)>
<org.apache.log4j.PropertyConfigurator: void configure(java.util.Properties)>
<org.apache.log4j.lf5.LF5Appender: int getScreenHeight()>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,float)>
<org.apache.log4j.LogXF: void exiting(org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)>
<org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>
<org.apache.log4j.LogXF: java.lang.Short valueOf(short)>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.lf5.util.LogMonitorAdapter: int getScreenHeight()>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,boolean)>
<org.apache.log4j.jmx.Agent: java.lang.Object createServer()>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,double)>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.log4j.net.SyslogAppender: int getFacility(java.lang.String)>
<org.apache.log4j.lf5.viewer.LF5SwingUtils: boolean contains(int,javax.swing.table.TableModel)>
<org.apache.log4j.helpers.UtilLoggingLevel: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>
<org.apache.log4j.MDC: java.util.Hashtable getContext()>
<org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>
<org.apache.log4j.helpers.MDCKeySetExtractor: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.spi.LoggingEvent: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.lf5.LF5Appender: int getScreenWidth()>
<org.apache.log4j.NDC: void push(java.lang.String)>
<org.apache.log4j.pattern.CachedDateFormat: void millisecondFormat(int,java.lang.StringBuffer,int)>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])>
<org.apache.log4j.LogMF: void error(org.apache.log4j.Logger,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,long)>
<org.apache.log4j.LogXF: java.lang.Byte valueOf(byte)>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,long)>
<org.apache.log4j.LogXF: java.lang.Boolean valueOf(boolean)>
<org.apache.log4j.pattern.ThreadPatternConverter: org.apache.log4j.pattern.ThreadPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,short)>
<org.apache.log4j.lf5.util.StreamUtils: void copy(java.io.InputStream,java.io.OutputStream)>
<org.apache.log4j.net.SyslogAppender: java.lang.String getFacilityString(int)>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,java.lang.Object[])>
<org.apache.log4j.pattern.FileLocationPatternConverter: org.apache.log4j.pattern.FileLocationPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,float)>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,int)>
<org.apache.log4j.helpers.Transform: void appendEscapingCDATA(java.lang.StringBuffer,java.lang.String)>
<org.apache.log4j.xml.DOMConfigurator: void setParameter(org.w3c.dom.Element,org.apache.log4j.config.PropertySetter,java.util.Properties)>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,java.lang.Object[])>
<org.apache.log4j.pattern.PatternParser: int extractConverter(char,java.lang.String,int,java.lang.StringBuffer,java.lang.StringBuffer)>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.NDC: void clear()>
<org.apache.log4j.net.JMSSink: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.pattern.PatternParser: java.util.Map getFileNamePatternRules()>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,char)>
<org.apache.log4j.xml.DOMConfigurator: java.lang.Object parseElement(org.w3c.dom.Element,java.util.Properties,java.lang.Class)>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,boolean)>
<org.apache.log4j.NDC: java.lang.String pop()>
<org.apache.log4j.chainsaw.MyTableModel: boolean access$400(org.apache.log4j.chainsaw.MyTableModel,org.apache.log4j.chainsaw.EventDetails)>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,byte)>
<org.apache.log4j.LogManager: boolean isLikelySafeScenario(java.lang.Exception)>
<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.lf5.util.LogMonitorAdapter: int getDefaultMonitorWidth()>
<org.apache.log4j.net.SocketHubAppender: java.net.ServerSocket access$000(org.apache.log4j.net.SocketHubAppender)>
<org.apache.log4j.Level: org.apache.log4j.Level toLevel(int,org.apache.log4j.Level)>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,short)>
<org.apache.log4j.pattern.ClassNamePatternConverter: org.apache.log4j.pattern.ClassNamePatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.xml.DOMConfigurator: java.lang.String subst(java.lang.String,java.util.Properties)>
<org.apache.log4j.lf5.util.ResourceUtils: java.io.InputStream getResourceAsStream(java.lang.Object,org.apache.log4j.lf5.util.Resource)>
<org.apache.log4j.PropertyConfigurator: void configure(java.net.URL)>
<org.apache.log4j.Category: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.lf5.LF5Appender: int getDefaultMonitorHeight()>
<org.apache.log4j.pattern.PatternParser: java.util.Map getPatternLayoutRules()>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,byte)>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,float)>
<org.apache.log4j.LogManager: org.apache.log4j.Logger getLogger(java.lang.Class)>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,java.lang.Object)>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,short)>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,double)>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.lf5.viewer.LF5SwingUtils: void moveAdjustable(int,java.awt.Adjustable)>
<org.apache.log4j.LogMF: void debug(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,boolean)>
<org.apache.log4j.LogSF: void error(org.apache.log4j.Logger,java.lang.String,java.lang.Object[])>
<org.apache.log4j.config.PropertyGetter: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.helpers.OptionConverter: java.lang.String[] concatanateArrays(java.lang.String[],java.lang.String[])>
<org.apache.log4j.lf5.util.LogFileParser: void access$000(org.apache.log4j.lf5.util.LogFileParser)>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>
<org.apache.log4j.Priority: org.apache.log4j.Priority toPriority(java.lang.String,org.apache.log4j.Priority)>
<org.apache.log4j.net.SMTPAppender: java.lang.String access$100(org.apache.log4j.net.SMTPAppender)>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,char)>
<org.apache.log4j.net.SocketHubAppender: org.apache.log4j.helpers.CyclicBuffer access$100(org.apache.log4j.net.SocketHubAppender)>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.log4j.BasicConfigurator: void resetConfiguration()>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,char)>
<org.apache.log4j.pattern.RelativeTimePatternConverter: org.apache.log4j.pattern.RelativeTimePatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.LogManager: void shutdown()>
<org.apache.log4j.lf5.util.StreamUtils: byte[] getBytes(java.io.InputStream)>
<org.apache.log4j.LogSF: void warn(org.apache.log4j.Logger,java.lang.String,long)>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogMF: boolean isSimple(java.lang.String)>
<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,int)>
<org.apache.log4j.helpers.OptionConverter: int toInt(java.lang.String,int)>
<org.apache.log4j.helpers.LogLog: void error(java.lang.String)>
<org.apache.log4j.LogMF: void fatal(org.apache.log4j.Logger,java.lang.String,java.lang.Object[])>
<org.apache.log4j.config.PropertyPrinter: java.lang.String capitalize(java.lang.String)>
<org.apache.log4j.LogXF: java.lang.Integer valueOf(int)>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,short)>
<org.apache.log4j.LogMF: java.lang.String format(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.log4j.helpers.OptionConverter: long toFileSize(java.lang.String,long)>
<org.apache.log4j.lf5.LF5Appender: int getDefaultMonitorWidth()>
<org.apache.log4j.PropertyConfigurator: void configureAndWatch(java.lang.String,long)>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,float)>
<org.apache.log4j.LogSF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,boolean)>
<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,java.lang.Object[])>
<org.apache.log4j.lf5.util.ResourceUtils: java.net.URL getResourceAsURL(java.lang.Object,org.apache.log4j.lf5.util.Resource)>
<org.apache.log4j.LogSF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.Category: void shutdown()>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,int)>
<org.apache.log4j.helpers.Transform: java.lang.String escapeTags(java.lang.String)>
<org.apache.log4j.lf5.LogLevel: java.util.Map getLogLevelColorMap()>
<org.apache.log4j.LogManager: void resetConfiguration()>
<org.apache.log4j.net.ZeroConfSupport: java.lang.Object createJmDNSVersion1()>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,double)>
<org.apache.log4j.pattern.NameAbbreviator: org.apache.log4j.pattern.NameAbbreviator getDefaultAbbreviator()>
<org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>
<org.apache.log4j.LogSF: void debug(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,char)>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.LogSF: void error(org.apache.log4j.Logger,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogMF: void forcedLog(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String)>
<org.apache.log4j.LogXF: java.lang.Character valueOf(char)>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,boolean)>
<org.apache.log4j.LogSF: void trace(org.apache.log4j.Logger,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogManager: org.apache.log4j.Logger exists(java.lang.String)>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,java.lang.Object)>
<org.apache.log4j.NDC: void setMaxDepth(int)>
<org.apache.log4j.chainsaw.MyTableModel: void access$500(org.apache.log4j.chainsaw.MyTableModel,boolean)>
<org.apache.log4j.xml.DOMConfigurator: void configure(java.lang.String)>
<org.apache.log4j.LogMF: void warn(org.apache.log4j.Logger,java.lang.String,short)>
<org.apache.log4j.LogMF: void log(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.lf5.DefaultLF5Configurator: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.helpers.PatternParser: java.lang.Class class$(java.lang.String)>
<org.apache.log4j.LogSF: void info(org.apache.log4j.Logger,java.lang.String,int)>
<org.apache.log4j.pattern.PropertiesPatternConverter: org.apache.log4j.pattern.PropertiesPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String treePathToString(javax.swing.tree.TreePath)>
<org.apache.log4j.pattern.NDCPatternConverter: org.apache.log4j.pattern.NDCPatternConverter newInstance(java.lang.String[])>
<org.apache.log4j.LogMF: void info(org.apache.log4j.Logger,java.lang.String,java.lang.Object)>
<org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel register(org.apache.log4j.lf5.LogLevel)>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.apache.log4j.MDC: java.lang.Object get(java.lang.String)>
<org.apache.log4j.LogMF: void logrb(org.apache.log4j.Logger,org.apache.log4j.Level,java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.log4j.LogXF: void entering(org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)>

Static Calls found:
STATIC edge: staticinvoke <org.apache.log4j.config.PropertySetter: void setProperties(java.lang.Object,java.util.Properties,java.lang.String)>(appender, props, $r7) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.config.PropertySetter: void setProperties(java.lang.Object,java.util.Properties,java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r1) in <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r0) in <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r7) in <org.apache.log4j.config.PropertySetter: void setProperty(java.beans.PropertyDescriptor,java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.helpers.OptionConverter: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Caught Exception while in Loader.getResource. This may be innocuous.", t) in <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>("Could not instantiate throwableRenderer.") in <org.apache.log4j.PropertyConfigurator: void parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>
STATIC edge: appenderName = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>($r1, props) in <org.apache.log4j.PropertyConfigurator: void parseErrorHandler(org.apache.log4j.spi.ErrorHandler,java.lang.String,java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: $r3 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.util.List access$200(org.apache.log4j.chainsaw.MyTableModel)>($r1) in <org.apache.log4j.chainsaw.MyTableModel$Processor: void run()> ==> <org.apache.log4j.chainsaw.MyTableModel: java.util.List access$200(org.apache.log4j.chainsaw.MyTableModel)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r1) in <org.apache.log4j.or.RendererMap: void addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>
STATIC edge: $r2 = staticinvoke <org.apache.log4j.or.RendererMap: java.lang.Class class$(java.lang.String)>("org.apache.log4j.or.ObjectRenderer") in <org.apache.log4j.or.RendererMap: void addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)> ==> <org.apache.log4j.or.RendererMap: java.lang.Class class$(java.lang.String)>
STATIC edge: $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() in <org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)> ==> <java.lang.System: long currentTimeMillis()>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r2) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r8) in <org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r1) in <org.apache.log4j.PropertyConfigurator: void parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r13 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>("Events: ") in <org.apache.log4j.chainsaw.Main: void <init>()> ==> <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("Could not find root logger information. Is this OK?") in <org.apache.log4j.PropertyConfigurator: void configureRootCategory(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r2 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Class class$(java.lang.String)>("org.apache.log4j.spi.Configurator") in <org.apache.log4j.helpers.OptionConverter: void selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Class class$(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r1, e) in <org.apache.log4j.or.RendererMap: void addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <org.apache.log4j.chainsaw.MyTableModel: void access$500(org.apache.log4j.chainsaw.MyTableModel,boolean)>($r1, toHead) in <org.apache.log4j.chainsaw.MyTableModel$Processor: void run()> ==> <org.apache.log4j.chainsaw.MyTableModel: void access$500(org.apache.log4j.chainsaw.MyTableModel,boolean)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r2, e) in <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>
STATIC edge: key = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("log4j.configDebug", null) in <org.apache.log4j.helpers.LogLog: void <clinit>()> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>
STATIC edge: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(key, def) in <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)> ==> <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>("Please initialize the log4j system properly.") in <org.apache.log4j.Hierarchy: void emitNoAppenderWarning(org.apache.log4j.Category)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>
STATIC edge: end = staticinvoke <java.lang.System: long currentTimeMillis()>() in <org.apache.log4j.chainsaw.MyTableModel: void updateFilteredEvents(boolean)> ==> <java.lang.System: long currentTimeMillis()>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r8) in <org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(clazz) in <org.apache.log4j.helpers.Loader: java.lang.Class loadClass(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: $r2 = staticinvoke <java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>(key) in <org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)> ==> <java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.LoadXMLAction: java.lang.Class class$(java.lang.String)>("org.apache.log4j.chainsaw.LoadXMLAction") in <org.apache.log4j.chainsaw.LoadXMLAction: void <clinit>()> ==> <org.apache.log4j.chainsaw.LoadXMLAction: java.lang.Class class$(java.lang.String)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.xml.DOMConfigurator: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.LogManager: org.apache.log4j.spi.LoggerRepository getLoggerRepository()>() in <org.apache.log4j.PropertyConfigurator: void configure(java.util.Properties)> ==> <org.apache.log4j.LogManager: org.apache.log4j.spi.LoggerRepository getLoggerRepository()>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r1) in <org.apache.log4j.helpers.OptionConverter: void selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: value = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>("log4j.rootCategory", props) in <org.apache.log4j.PropertyConfigurator: void configureRootCategory(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: $r14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() in <org.apache.log4j.config.PropertySetter: void setProperty(java.beans.PropertyDescriptor,java.lang.String,java.lang.String)> ==> <java.lang.Thread: java.lang.Thread currentThread()>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.chainsaw.LoadXMLAction: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.chainsaw.ControlPanel: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: $r5 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>($r3, $r4, $r0, null) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>("org.apache.log4j.spi.LoggerFactory") in <org.apache.log4j.PropertyConfigurator: void configureLoggerFactory(java.util.Properties)> ==> <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>
STATIC edge: staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(this, "XML parser not in classpath - unable to load XML events.", "CHAINSAW", 0) in <org.apache.log4j.chainsaw.Main: void <init>()> ==> <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r1, ex) in <org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>($r0) in <org.apache.log4j.chainsaw.ExitAction: void <clinit>()> ==> <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>
STATIC edge: port = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(strRep) in <org.apache.log4j.chainsaw.Main: void setupReceiver(org.apache.log4j.chainsaw.MyTableModel)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: factoryClassName = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>("log4j.loggerFactory", props) in <org.apache.log4j.PropertyConfigurator: void configureLoggerFactory(java.util.Properties)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r2) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r7) in <org.apache.log4j.config.PropertySetter: void introspect()> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>
STATIC edge: $r4 = staticinvoke <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>(levelStr, $r3) in <org.apache.log4j.PropertyConfigurator: void parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>(msg, ex) in <org.apache.log4j.LogManager: org.apache.log4j.spi.LoggerRepository getLoggerRepository()> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r2, e) in <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>
STATIC edge: $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() in <org.apache.log4j.helpers.Loader: java.lang.Class loadClass(java.lang.String)> ==> <java.lang.Thread: java.lang.Thread currentThread()>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r2) in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>
STATIC edge: url = staticinvoke <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)>("log4j.properties") in <org.apache.log4j.LogManager: void <clinit>()> ==> <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>("org.apache.log4j.spi.ErrorHandler") in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>
STATIC edge: thresholdStr = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>("log4j.threshold", properties) in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.Logger: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: $z0 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: boolean access$100(org.apache.log4j.chainsaw.MyTableModel)>($r1) in <org.apache.log4j.chainsaw.MyTableModel$Processor: void run()> ==> <org.apache.log4j.chainsaw.MyTableModel: boolean access$100(org.apache.log4j.chainsaw.MyTableModel)>
STATIC edge: staticinvoke <java.lang.System: void exit(int)>(1) in <org.apache.log4j.chainsaw.Main: void setupReceiver(org.apache.log4j.chainsaw.MyTableModel)> ==> <java.lang.System: void exit(int)>
STATIC edge: $r2 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>($r8, $r9, null) in <org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r1, e) in <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: customLevel = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.Class loadClass(java.lang.String)>(clazz) in <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)> ==> <org.apache.log4j.helpers.Loader: java.lang.Class loadClass(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>("[log4j.configDebug] is deprecated. Use [log4j.debug] instead.") in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>($r0) in <org.apache.log4j.chainsaw.ControlPanel: void <clinit>()> ==> <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>
STATIC edge: staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(this, "Unable to create a XML parser - unable to load XML events.", "CHAINSAW", 0) in <org.apache.log4j.chainsaw.Main: void <init>()> ==> <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>
STATIC edge: $r9 = staticinvoke <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>("org.apache.log4j.spi.Filter") in <org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)> ==> <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.config.PropertySetter: void setProperties(java.lang.Object,java.util.Properties,java.lang.String)>(eh, edited, $r7) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.config.PropertySetter: void setProperties(java.lang.Object,java.util.Properties,java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.config.PropertySetter: java.lang.Class class$(java.lang.String)>("org.apache.log4j.Priority") in <org.apache.log4j.config.PropertySetter: java.lang.Object convertArg(java.lang.String,java.lang.Class)> ==> <org.apache.log4j.config.PropertySetter: java.lang.Class class$(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r1) in <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r2 = staticinvoke <java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>(resource) in <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)> ==> <java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>() in <org.apache.log4j.chainsaw.LoggingReceiver$Slurper: void run()> ==> <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r1) in <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r1) in <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(this, $r3, "CHAINSAW", 0) in <org.apache.log4j.chainsaw.Main: void setupReceiver(org.apache.log4j.chainsaw.MyTableModel)> ==> <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>(properties, $r2, $r7, null) in <org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>
STATIC edge: $z0 = staticinvoke <org.apache.log4j.LogManager: boolean isLikelySafeScenario(java.lang.Exception)>(ex) in <org.apache.log4j.LogManager: org.apache.log4j.spi.LoggerRepository getLoggerRepository()> ==> <org.apache.log4j.LogManager: boolean isLikelySafeScenario(java.lang.Exception)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.chainsaw.DetailPanel: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String substVars(java.lang.String,java.util.Properties)>(value, props) in <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String substVars(java.lang.String,java.util.Properties)>
STATIC edge: staticinvoke <org.apache.log4j.config.PropertySetter: void setProperties(java.lang.Object,java.util.Properties,java.lang.String)>(layout, props, $r7) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.config.PropertySetter: void setProperties(java.lang.Object,java.util.Properties,java.lang.String)>
STATIC edge: $r3 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>() in <org.apache.log4j.chainsaw.LoadXMLAction: void <init>(javax.swing.JFrame,org.apache.log4j.chainsaw.MyTableModel)> ==> <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>
STATIC edge: staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.util.Properties)>(props) in <org.apache.log4j.chainsaw.Main: void initLog4J()> ==> <org.apache.log4j.PropertyConfigurator: void configure(java.util.Properties)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.LogManager: org.apache.log4j.spi.LoggerRepository getLoggerRepository()>() in <org.apache.log4j.LogManager: org.apache.log4j.Logger getLogger(java.lang.String)> ==> <org.apache.log4j.LogManager: org.apache.log4j.spi.LoggerRepository getLoggerRepository()>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r2, e) in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.Main: java.lang.Class class$(java.lang.String)>("org.apache.log4j.chainsaw.Main") in <org.apache.log4j.chainsaw.Main: void <clinit>()> ==> <org.apache.log4j.chainsaw.Main: java.lang.Class class$(java.lang.String)>
STATIC edge: $r3 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.util.List access$200(org.apache.log4j.chainsaw.MyTableModel)>($r1) in <org.apache.log4j.chainsaw.MyTableModel$Processor: void run()> ==> <org.apache.log4j.chainsaw.MyTableModel: java.util.List access$200(org.apache.log4j.chainsaw.MyTableModel)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r8) in <org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>
STATIC edge: $r3 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>($r1, $r2, null) in <org.apache.log4j.or.RendererMap: void addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r2) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r5 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>($r3, $r4, $r0, null) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>($r0) in <org.apache.log4j.chainsaw.DetailPanel: void <clinit>()> ==> <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>(thresholdStr, $r0) in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>
STATIC edge: $r7 = staticinvoke <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>("org.apache.log4j.spi.ThrowableRenderer") in <org.apache.log4j.PropertyConfigurator: void parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r1, e) in <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository)> ==> <java.lang.Thread: java.lang.Thread currentThread()>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.ClassLoader getTCL()>() in <org.apache.log4j.helpers.Loader: java.lang.Class loadClass(java.lang.String)> ==> <org.apache.log4j.helpers.Loader: java.lang.ClassLoader getTCL()>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r4, $r6) in <org.apache.log4j.config.PropertySetter: void setProperty(java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r1) in <org.apache.log4j.PropertyConfigurator: void parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r17 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() in <org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)> ==> <java.lang.Thread: java.lang.Thread currentThread()>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>($r1, props) in <org.apache.log4j.PropertyConfigurator: void parseErrorHandler(org.apache.log4j.spi.ErrorHandler,java.lang.String,java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: staticinvoke <org.apache.log4j.or.RendererMap: void addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)>($r5, renderedClass, renderingClass) in <org.apache.log4j.PropertyConfigurator: void parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.or.RendererMap: void addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.chainsaw.ExitAction: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r1) in <org.apache.log4j.helpers.OptionConverter: void selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>($r0) in <org.apache.log4j.chainsaw.MyTableModel: void <clinit>()> ==> <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>
STATIC edge: $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() in <org.apache.log4j.spi.LoggingEvent: void <clinit>()> ==> <java.lang.System: long currentTimeMillis()>
STATIC edge: replacement = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>(key, null) in <org.apache.log4j.helpers.OptionConverter: java.lang.String substVars(java.lang.String,java.util.Properties)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>
STATIC edge: $r1 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>("Controls: ") in <org.apache.log4j.chainsaw.ControlPanel: void <init>(org.apache.log4j.chainsaw.MyTableModel)> ==> <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>
STATIC edge: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.apache.log4j.Layout: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r2) in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.Category: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: override = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("log4j.defaultInitOverride", null) in <org.apache.log4j.LogManager: void <clinit>()> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r2) in <org.apache.log4j.Hierarchy: void emitNoAppenderWarning(org.apache.log4j.Category)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.config.PropertySetter: java.lang.Class class$(java.lang.String)>("java.lang.String") in <org.apache.log4j.config.PropertySetter: java.lang.Object convertArg(java.lang.String,java.lang.Class)> ==> <org.apache.log4j.config.PropertySetter: java.lang.Class class$(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.Class class$(java.lang.String)>("java.lang.Thread") in <org.apache.log4j.helpers.Loader: java.lang.ClassLoader getTCL()> ==> <org.apache.log4j.helpers.Loader: java.lang.Class class$(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void setInternalDebugging(boolean)>($z0) in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.LogLog: void setInternalDebugging(boolean)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r0, e) in <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>
STATIC edge: $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository)> ==> <java.lang.Thread: java.lang.Thread currentThread()>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r2) in <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>
STATIC edge: $r8 = staticinvoke <org.apache.log4j.LogManager: org.apache.log4j.spi.LoggerRepository getLoggerRepository()>() in <org.apache.log4j.LogManager: void <clinit>()> ==> <org.apache.log4j.LogManager: org.apache.log4j.spi.LoggerRepository getLoggerRepository()>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Class class$(java.lang.String)>("org.apache.log4j.Level") in <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Class class$(java.lang.String)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(clazz) in <org.apache.log4j.helpers.Loader: java.lang.Class loadClass(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.LoggingReceiver: java.lang.Class class$(java.lang.String)>("org.apache.log4j.chainsaw.LoggingReceiver") in <org.apache.log4j.chainsaw.LoggingReceiver: void <clinit>()> ==> <org.apache.log4j.chainsaw.LoggingReceiver: java.lang.Class class$(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r4) in <org.apache.log4j.LogManager: void <clinit>()> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(3, 2) in <org.apache.log4j.chainsaw.MyTableModel: void <clinit>()> ==> <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.config.PropertySetter: java.lang.Class class$(java.lang.String)>("org.apache.log4j.spi.ErrorHandler") in <org.apache.log4j.config.PropertySetter: java.lang.Object convertArg(java.lang.String,java.lang.Class)> ==> <org.apache.log4j.config.PropertySetter: java.lang.Class class$(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>() in <org.apache.log4j.chainsaw.LoggingReceiver$Slurper: void run()> ==> <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.chainsaw.LoggingReceiver: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r2, e) in <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>
STATIC edge: $r2 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.lang.Object access$000(org.apache.log4j.chainsaw.MyTableModel)>($r1) in <org.apache.log4j.chainsaw.MyTableModel$Processor: void run()> ==> <org.apache.log4j.chainsaw.MyTableModel: java.lang.Object access$000(org.apache.log4j.chainsaw.MyTableModel)>
STATIC edge: rootRef = staticinvoke <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>($r1, 0) in <org.apache.log4j.PropertyConfigurator: void parseErrorHandler(org.apache.log4j.spi.ErrorHandler,java.lang.String,java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>
STATIC edge: $z0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>(value, 1) in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.or.RendererMap: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r1, ex) in <org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r1) in <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.chainsaw.Main: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: $r8 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>($r3, $r7, null) in <org.apache.log4j.config.PropertySetter: java.lang.Object convertArg(java.lang.String,java.lang.Class)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("You have tried to set a null level to root.", $r0) in <org.apache.log4j.spi.RootLogger: void setLevel(org.apache.log4j.Level)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r1, e) in <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: additivity = staticinvoke <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>(value, 1) in <org.apache.log4j.PropertyConfigurator: void parseAdditivityForLogger(java.util.Properties,org.apache.log4j.Logger,java.lang.String)> ==> <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>
STATIC edge: $r3 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>($r1, $r2, null) in <org.apache.log4j.helpers.OptionConverter: void selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>
STATIC edge: classObj = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.Class loadClass(java.lang.String)>(className) in <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)> ==> <org.apache.log4j.helpers.Loader: java.lang.Class loadClass(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r2) in <org.apache.log4j.PropertyConfigurator: void configureLoggerFactory(java.util.Properties)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$(java.lang.String)>("org.apache.log4j.chainsaw.MyTableModel") in <org.apache.log4j.chainsaw.MyTableModel: void <clinit>()> ==> <org.apache.log4j.chainsaw.MyTableModel: java.lang.Class class$(java.lang.String)>
STATIC edge: $r5 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>($r3, $r4, $r0, null) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r4) in <org.apache.log4j.LogManager: void <clinit>()> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r1) in <org.apache.log4j.PropertyConfigurator: void parseAdditivityForLogger(java.util.Properties,org.apache.log4j.Logger,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r2) in <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r1, e) in <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.helpers.Loader: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r1) in <org.apache.log4j.or.RendererMap: void addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Error during default initialization", e) in <org.apache.log4j.LogManager: void <clinit>()> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>("See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.") in <org.apache.log4j.Hierarchy: void emitNoAppenderWarning(org.apache.log4j.Category)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>($r6, "log4j.throwableRenderer", $r7, null) in <org.apache.log4j.PropertyConfigurator: void parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Class class$(java.lang.String)>("java.lang.String") in <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Class class$(java.lang.String)>
STATIC edge: $r6 = staticinvoke <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.chainsaw.MyTableModel access$100(org.apache.log4j.chainsaw.LoggingReceiver)>($r5) in <org.apache.log4j.chainsaw.LoggingReceiver$Slurper: void run()> ==> <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.chainsaw.MyTableModel access$100(org.apache.log4j.chainsaw.LoggingReceiver)>
STATIC edge: staticinvoke <org.apache.log4j.config.PropertySetter: void setProperties(java.lang.Object,java.util.Properties,java.lang.String)>($r8, props, "log4j.factory.") in <org.apache.log4j.PropertyConfigurator: void configureLoggerFactory(java.util.Properties)> ==> <org.apache.log4j.config.PropertySetter: void setProperties(java.lang.Object,java.util.Properties,java.lang.String)>
STATIC edge: $r3 = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.Class class$(java.lang.String)>("org.apache.log4j.helpers.Loader") in <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)> ==> <org.apache.log4j.helpers.Loader: java.lang.Class class$(java.lang.String)>
STATIC edge: $r6 = staticinvoke <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>(v, $r5) in <org.apache.log4j.config.PropertySetter: java.lang.Object convertArg(java.lang.String,java.lang.Class)> ==> <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>
STATIC edge: $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository)> ==> <java.lang.Thread: java.lang.Thread currentThread()>
STATIC edge: prop = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("java.version", null) in <org.apache.log4j.helpers.Loader: void <clinit>()> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>
STATIC edge: renderingClass = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>(key, props) in <org.apache.log4j.PropertyConfigurator: void parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>("org.apache.log4j.Layout") in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>
STATIC edge: value = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>(key, properties) in <org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: $r2 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>($r1, superClass, defaultValue) in <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>
STATIC edge: value = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>(key, props) in <org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: $r6 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.util.SortedSet access$300(org.apache.log4j.chainsaw.MyTableModel)>($r5) in <org.apache.log4j.chainsaw.MyTableModel$Processor: void run()> ==> <org.apache.log4j.chainsaw.MyTableModel: java.util.SortedSet access$300(org.apache.log4j.chainsaw.MyTableModel)>
STATIC edge: start = staticinvoke <java.lang.System: long currentTimeMillis()>() in <org.apache.log4j.chainsaw.MyTableModel: void updateFilteredEvents(boolean)> ==> <java.lang.System: long currentTimeMillis()>
STATIC edge: $z0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>(reset, 0) in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r3) in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>($r0) in <org.apache.log4j.chainsaw.LoadXMLAction: void <clinit>()> ==> <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>
STATIC edge: recursiveReplacement = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String substVars(java.lang.String,java.util.Properties)>(replacement, props) in <org.apache.log4j.helpers.OptionConverter: java.lang.String substVars(java.lang.String,java.util.Properties)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String substVars(java.lang.String,java.util.Properties)>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.xml.DOMConfigurator: java.lang.Class class$(java.lang.String)>("java.lang.String") in <org.apache.log4j.xml.DOMConfigurator: void <clinit>()> ==> <org.apache.log4j.xml.DOMConfigurator: java.lang.Class class$(java.lang.String)>
STATIC edge: staticinvoke <java.lang.Thread: void sleep(long)>(1000L) in <org.apache.log4j.chainsaw.MyTableModel$Processor: void run()> ==> <java.lang.Thread: void sleep(long)>
STATIC edge: configurationOptionStr = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("log4j.configuration", null) in <org.apache.log4j.LogManager: void <clinit>()> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r2, e) in <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>
STATIC edge: $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() in <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)> ==> <java.lang.Thread: java.lang.Thread currentThread()>
STATIC edge: loggerName = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>($r1, props) in <org.apache.log4j.PropertyConfigurator: void parseErrorHandler(org.apache.log4j.spi.ErrorHandler,java.lang.String,java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.LogManager: org.apache.log4j.Logger getLogger(java.lang.String)>($r0) in <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)> ==> <org.apache.log4j.LogManager: org.apache.log4j.Logger getLogger(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String,java.lang.Throwable)>(msg, ex) in <org.apache.log4j.LogManager: org.apache.log4j.spi.LoggerRepository getLoggerRepository()> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String,java.lang.Throwable)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>() in <org.apache.log4j.chainsaw.LoggingReceiver$Slurper: void run()> ==> <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.DetailPanel: java.lang.Class class$(java.lang.String)>("org.apache.log4j.chainsaw.DetailPanel") in <org.apache.log4j.chainsaw.DetailPanel: void <clinit>()> ==> <org.apache.log4j.chainsaw.DetailPanel: java.lang.Class class$(java.lang.String)>
STATIC edge: value = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>($r1, props) in <org.apache.log4j.PropertyConfigurator: void parseAdditivityForLogger(java.util.Properties,org.apache.log4j.Logger,java.lang.String)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: url = staticinvoke <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)>(configurationOptionStr) in <org.apache.log4j.LogManager: void <clinit>()> ==> <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)>
STATIC edge: $r3 = staticinvoke <org.apache.log4j.config.PropertySetter: java.lang.Class class$(java.lang.String)>("org.apache.log4j.spi.OptionHandler") in <org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.config.PropertySetter: java.lang.Class class$(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r2) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r6 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>($r4, $r0, $r5) in <org.apache.log4j.PropertyConfigurator: void configureLoggerFactory(java.util.Properties)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>
STATIC edge: classLoader = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.ClassLoader getTCL()>() in <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)> ==> <org.apache.log4j.helpers.Loader: java.lang.ClassLoader getTCL()>
STATIC edge: $z0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>(key, 1) in <org.apache.log4j.helpers.LogLog: void <clinit>()> ==> <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>() in <org.apache.log4j.chainsaw.LoggingReceiver$Slurper: void run()> ==> <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>
STATIC edge: staticinvoke <org.apache.log4j.chainsaw.Main: void initLog4J()>() in <org.apache.log4j.chainsaw.Main: void main(java.lang.String[])> ==> <org.apache.log4j.chainsaw.Main: void initLog4J()>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>("org.apache.log4j.Appender") in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)>
STATIC edge: key = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("log4j.debug", null) in <org.apache.log4j.helpers.LogLog: void <clinit>()> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>
STATIC edge: $r2 = staticinvoke <org.apache.log4j.Level: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>(value, defaultValue) in <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)> ==> <org.apache.log4j.Level: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.PropertyConfigurator: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository)> ==> <java.lang.Thread: java.lang.Thread currentThread()>
STATIC edge: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0) in <org.apache.log4j.config.PropertySetter: java.lang.Class class$(java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: configuratorClassName = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("log4j.configuratorClass", null) in <org.apache.log4j.LogManager: void <clinit>()> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r1) in <org.apache.log4j.PropertyConfigurator: void parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: bi = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>($r1) in <org.apache.log4j.config.PropertySetter: void introspect()> ==> <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>($r0) in <org.apache.log4j.chainsaw.Main: void <clinit>()> ==> <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>() in <org.apache.log4j.chainsaw.LoggingReceiver$Slurper: void run()> ==> <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Caught Exception while in Loader.getResource. This may be innocuous.", t) in <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.ControlPanel: java.lang.Class class$(java.lang.String)>("org.apache.log4j.chainsaw.ControlPanel") in <org.apache.log4j.chainsaw.ControlPanel: void <clinit>()> ==> <org.apache.log4j.chainsaw.ControlPanel: java.lang.Class class$(java.lang.String)>
STATIC edge: $r7 = staticinvoke <org.apache.log4j.config.PropertySetter: java.lang.Class class$(java.lang.String)>("org.apache.log4j.spi.ErrorHandler") in <org.apache.log4j.config.PropertySetter: java.lang.Object convertArg(java.lang.String,java.lang.Class)> ==> <org.apache.log4j.config.PropertySetter: java.lang.Class class$(java.lang.String)>
STATIC edge: $r11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() in <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)> ==> <java.lang.Thread: java.lang.Thread currentThread()>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r2) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r4) in <org.apache.log4j.config.PropertySetter: void setProperty(java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>
STATIC edge: strRep = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("chainsaw.port") in <org.apache.log4j.chainsaw.Main: void setupReceiver(org.apache.log4j.chainsaw.MyTableModel)> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: staticinvoke <java.lang.System: void exit(int)>(1) in <org.apache.log4j.chainsaw.Main: void setupReceiver(org.apache.log4j.chainsaw.MyTableModel)> ==> <java.lang.System: void exit(int)>
STATIC edge: errorHandlerClass = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>(errorHandlerPrefix, props) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("Finished configuring.") in <org.apache.log4j.PropertyConfigurator: void doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: renderedClass = staticinvoke <org.apache.log4j.helpers.Loader: java.lang.Class loadClass(java.lang.String)>(renderedClassName) in <org.apache.log4j.or.RendererMap: void addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.Loader: java.lang.Class loadClass(java.lang.String)>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>($r0) in <org.apache.log4j.chainsaw.LoggingReceiver: void <clinit>()> ==> <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r1) in <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r1, e) in <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.ExitAction: java.lang.Class class$(java.lang.String)>("org.apache.log4j.chainsaw.ExitAction") in <org.apache.log4j.chainsaw.ExitAction: void <clinit>()> ==> <org.apache.log4j.chainsaw.ExitAction: java.lang.Class class$(java.lang.String)>
STATIC edge: name = staticinvoke <java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>(name) in <org.apache.log4j.config.PropertySetter: void setProperty(java.lang.String,java.lang.String)> ==> <java.beans.Introspector: java.lang.String decapitalize(java.lang.String)>
STATIC edge: $r4 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.util.SortedSet access$300(org.apache.log4j.chainsaw.MyTableModel)>($r1) in <org.apache.log4j.chainsaw.MyTableModel$Processor: void run()> ==> <org.apache.log4j.chainsaw.MyTableModel: java.util.SortedSet access$300(org.apache.log4j.chainsaw.MyTableModel)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r2) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r1) in <org.apache.log4j.PropertyConfigurator: void parseAdditivityForLogger(java.util.Properties,org.apache.log4j.Logger,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(this, $r3, "CHAINSAW", 0) in <org.apache.log4j.chainsaw.Main: void setupReceiver(org.apache.log4j.chainsaw.MyTableModel)> ==> <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.Category: java.lang.Class class$(java.lang.String)>("org.apache.log4j.Category") in <org.apache.log4j.Category: void <clinit>()> ==> <org.apache.log4j.Category: java.lang.Class class$(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r2) in <org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r2) in <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.OptionConverter: void selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository)>(url, configuratorClassName, $r8) in <org.apache.log4j.LogManager: void <clinit>()> ==> <org.apache.log4j.helpers.OptionConverter: void selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>() in <org.apache.log4j.chainsaw.LoggingReceiver$Slurper: void run()> ==> <org.apache.log4j.chainsaw.LoggingReceiver: org.apache.log4j.Logger access$000()>
STATIC edge: $z0 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: boolean access$400(org.apache.log4j.chainsaw.MyTableModel,org.apache.log4j.chainsaw.EventDetails)>($r1, event) in <org.apache.log4j.chainsaw.MyTableModel$Processor: void run()> ==> <org.apache.log4j.chainsaw.MyTableModel: boolean access$400(org.apache.log4j.chainsaw.MyTableModel,org.apache.log4j.chainsaw.EventDetails)>
STATIC edge: $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() in <org.apache.log4j.helpers.Loader: java.lang.ClassLoader getTCL()> ==> <java.lang.Thread: java.lang.Thread currentThread()>
STATIC edge: ignoreTCLProp = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("log4j.ignoreTCL", null) in <org.apache.log4j.helpers.Loader: void <clinit>()> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r1, ex) in <org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r1) in <org.apache.log4j.PropertyConfigurator: void parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.apache.log4j.Logger: java.lang.Class class$(java.lang.String)>("org.apache.log4j.Logger") in <org.apache.log4j.Logger: void <clinit>()> ==> <org.apache.log4j.Logger: java.lang.Class class$(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r2) in <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)> ==> <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>("The root logger cannot be set to null.") in <org.apache.log4j.PropertyConfigurator: void parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>
STATIC edge: $z0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>(ignoreTCLProp, 1) in <org.apache.log4j.helpers.Loader: void <clinit>()> ==> <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>
STATIC edge: className = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>(key, props) in <org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: value = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>(key, props) in <org.apache.log4j.PropertyConfigurator: void parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Caught Exception while in Loader.getResource. This may be innocuous.", t) in <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)> ==> <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("Default initialization of overridden by log4j.defaultInitOverrideproperty.") in <org.apache.log4j.LogManager: void <clinit>()> ==> <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>
STATIC edge: $r1 = staticinvoke <org.apache.log4j.helpers.NullEnumeration: org.apache.log4j.helpers.NullEnumeration getInstance()>() in <org.apache.log4j.Category: java.util.Enumeration getAllAppenders()> ==> <org.apache.log4j.helpers.NullEnumeration: org.apache.log4j.helpers.NullEnumeration getInstance()>
STATIC edge: value = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>("log4j.rootLogger", props) in <org.apache.log4j.PropertyConfigurator: void configureRootCategory(java.util.Properties,org.apache.log4j.spi.LoggerRepository)> ==> <org.apache.log4j.helpers.OptionConverter: java.lang.String findAndSubst(java.lang.String,java.util.Properties)>
STATIC edge: $r1 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>("Details: ") in <org.apache.log4j.chainsaw.DetailPanel: void <init>(javax.swing.JTable,org.apache.log4j.chainsaw.MyTableModel)> ==> <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>
STATIC edge: url = staticinvoke <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)>("log4j.xml") in <org.apache.log4j.LogManager: void <clinit>()> ==> <org.apache.log4j.helpers.Loader: java.net.URL getResource(java.lang.String)>


Transforming org.apache.log4j.Appender... 
Transforming org.apache.log4j.AppenderSkeleton... 
Transforming org.apache.log4j.AsyncAppender$DiscardSummary... 
Transforming org.apache.log4j.AsyncAppender$Dispatcher... 
Transforming org.apache.log4j.AsyncAppender... 
Transforming org.apache.log4j.BasicConfigurator... 
Transforming org.apache.log4j.Category... 
Transforming org.apache.log4j.CategoryKey... 
Transforming org.apache.log4j.ConsoleAppender$SystemErrStream... 
Transforming org.apache.log4j.ConsoleAppender$SystemOutStream... 
Transforming org.apache.log4j.ConsoleAppender... 
Transforming org.apache.log4j.DailyRollingFileAppender... 
Transforming org.apache.log4j.DefaultCategoryFactory... 
Transforming org.apache.log4j.DefaultThrowableRenderer... 
Transforming org.apache.log4j.Dispatcher... 
Transforming org.apache.log4j.EnhancedPatternLayout... 
Transforming org.apache.log4j.EnhancedThrowableRenderer... 
Transforming org.apache.log4j.FileAppender... 
Transforming org.apache.log4j.HTMLLayout... 
Transforming org.apache.log4j.Hierarchy... 
Transforming org.apache.log4j.Layout... 
Transforming org.apache.log4j.Level... 
Transforming org.apache.log4j.LogMF... 
Transforming org.apache.log4j.LogManager... 
Transforming org.apache.log4j.LogSF... 
Transforming org.apache.log4j.LogXF... 
Transforming org.apache.log4j.Logger... 
Transforming org.apache.log4j.MDC... 
Transforming org.apache.log4j.NDC$DiagnosticContext... 
Transforming org.apache.log4j.NDC... 
Transforming org.apache.log4j.NameValue... 
Transforming org.apache.log4j.PatternLayout... 
Transforming org.apache.log4j.Priority... 
Transforming org.apache.log4j.PropertyConfigurator... 
Transforming org.apache.log4j.PropertyWatchdog... 
Transforming org.apache.log4j.ProvisionNode... 
Transforming org.apache.log4j.RollingCalendar... 
Transforming org.apache.log4j.RollingFileAppender... 
Transforming org.apache.log4j.SimpleLayout... 
Transforming org.apache.log4j.SortedKeyEnumeration... 
Transforming org.apache.log4j.TTCCLayout... 
Transforming org.apache.log4j.WriterAppender... 
Transforming org.apache.log4j.chainsaw.ControlPanel$1... 
Transforming org.apache.log4j.chainsaw.ControlPanel$2... 
Transforming org.apache.log4j.chainsaw.ControlPanel$3... 
Transforming org.apache.log4j.chainsaw.ControlPanel$4... 
Transforming org.apache.log4j.chainsaw.ControlPanel$5... 
Transforming org.apache.log4j.chainsaw.ControlPanel$6... 
Transforming org.apache.log4j.chainsaw.ControlPanel$7... 
Transforming org.apache.log4j.chainsaw.ControlPanel... 
Transforming org.apache.log4j.chainsaw.DetailPanel... 
Transforming org.apache.log4j.chainsaw.EventDetails... 
Transforming org.apache.log4j.chainsaw.ExitAction... 
Transforming org.apache.log4j.chainsaw.LoadXMLAction... 
Transforming org.apache.log4j.chainsaw.LoggingReceiver$Slurper... 
Transforming org.apache.log4j.chainsaw.LoggingReceiver... 
Transforming org.apache.log4j.chainsaw.Main$1... 
Transforming org.apache.log4j.chainsaw.Main... 
Transforming org.apache.log4j.chainsaw.MyTableModel$1... 
Transforming org.apache.log4j.chainsaw.MyTableModel$Processor... 
Transforming org.apache.log4j.chainsaw.MyTableModel... 
Transforming org.apache.log4j.chainsaw.XMLFileHandler... 
Transforming org.apache.log4j.config.PropertyGetter$PropertyCallback... 
Transforming org.apache.log4j.config.PropertyGetter... 
Transforming org.apache.log4j.config.PropertyPrinter... 
Transforming org.apache.log4j.config.PropertySetter... 
Transforming org.apache.log4j.config.PropertySetterException... 
Transforming org.apache.log4j.helpers.AbsoluteTimeDateFormat... 
Transforming org.apache.log4j.helpers.AppenderAttachableImpl... 
Transforming org.apache.log4j.helpers.BoundedFIFO... 
Transforming org.apache.log4j.helpers.CountingQuietWriter... 
Transforming org.apache.log4j.helpers.CyclicBuffer... 
Transforming org.apache.log4j.helpers.DateLayout... 
Transforming org.apache.log4j.helpers.DateTimeDateFormat... 
Transforming org.apache.log4j.helpers.FileWatchdog... 
Transforming org.apache.log4j.helpers.FormattingInfo... 
Transforming org.apache.log4j.helpers.ISO8601DateFormat... 
Transforming org.apache.log4j.helpers.Loader... 
Transforming org.apache.log4j.helpers.LogLog... 
Transforming org.apache.log4j.helpers.MDCKeySetExtractor... 
Transforming org.apache.log4j.helpers.NullEnumeration... 
Transforming org.apache.log4j.helpers.OnlyOnceErrorHandler... 
Transforming org.apache.log4j.helpers.OptionConverter... 
Transforming org.apache.log4j.helpers.PatternConverter... 
Transforming org.apache.log4j.helpers.PatternParser$BasicPatternConverter... 
Transforming org.apache.log4j.helpers.PatternParser$CategoryPatternConverter... 
Transforming org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter... 
Transforming org.apache.log4j.helpers.PatternParser$DatePatternConverter... 
Transforming org.apache.log4j.helpers.PatternParser$LiteralPatternConverter... 
Transforming org.apache.log4j.helpers.PatternParser$LocationPatternConverter... 
Transforming org.apache.log4j.helpers.PatternParser$MDCPatternConverter... 
Transforming org.apache.log4j.helpers.PatternParser$NamedPatternConverter... 
Transforming org.apache.log4j.helpers.PatternParser... 
Transforming org.apache.log4j.helpers.QuietWriter... 
Transforming org.apache.log4j.helpers.RelativeTimeDateFormat... 
Transforming org.apache.log4j.helpers.SyslogQuietWriter... 
Transforming org.apache.log4j.helpers.SyslogWriter... 
Transforming org.apache.log4j.helpers.ThreadLocalMap... 
Transforming org.apache.log4j.helpers.Transform... 
Transforming org.apache.log4j.helpers.UtilLoggingLevel... 
Transforming org.apache.log4j.jdbc.JDBCAppender... 
Transforming org.apache.log4j.jmx.AbstractDynamicMBean... 
Transforming org.apache.log4j.jmx.Agent... 
Transforming org.apache.log4j.jmx.AppenderDynamicMBean... 
Transforming org.apache.log4j.jmx.HierarchyDynamicMBean... 
Transforming org.apache.log4j.jmx.LayoutDynamicMBean... 
Transforming org.apache.log4j.jmx.LoggerDynamicMBean... 
Transforming org.apache.log4j.jmx.MethodUnion... 
Transforming org.apache.log4j.lf5.AppenderFinalizer... 
Transforming org.apache.log4j.lf5.DefaultLF5Configurator... 
Transforming org.apache.log4j.lf5.LF5Appender... 
Transforming org.apache.log4j.lf5.Log4JLogRecord... 
Transforming org.apache.log4j.lf5.LogLevel... 
Transforming org.apache.log4j.lf5.LogLevelFormatException... 
Transforming org.apache.log4j.lf5.LogRecord... 
Transforming org.apache.log4j.lf5.LogRecordFilter... 
Transforming org.apache.log4j.lf5.PassingLogRecordFilter... 
Transforming org.apache.log4j.lf5.StartLogFactor5... 
Transforming org.apache.log4j.lf5.util.AdapterLogRecord... 
Transforming org.apache.log4j.lf5.util.DateFormatManager... 
Transforming org.apache.log4j.lf5.util.LogFileParser$1... 
Transforming org.apache.log4j.lf5.util.LogFileParser... 
Transforming org.apache.log4j.lf5.util.LogMonitorAdapter... 
Transforming org.apache.log4j.lf5.util.Resource... 
Transforming org.apache.log4j.lf5.util.ResourceUtils... 
Transforming org.apache.log4j.lf5.util.StreamUtils... 
Transforming org.apache.log4j.lf5.viewer.FilteredLogTableModel... 
Transforming org.apache.log4j.lf5.viewer.LF5SwingUtils$1... 
Transforming org.apache.log4j.lf5.viewer.LF5SwingUtils... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$1... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$10... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$11... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$12... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$13... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$14... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$15... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$16... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$17... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$18... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$19... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$2... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$20... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$21... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$22... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$23... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$24... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$25... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$26... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$27... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$28... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$29... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$3... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$30... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$31... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$32... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$4... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$5... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$6... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$7... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$8... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$9... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor$LogBrokerMonitorWindowAdaptor... 
Transforming org.apache.log4j.lf5.viewer.LogBrokerMonitor... 
Transforming org.apache.log4j.lf5.viewer.LogFactor5Dialog... 
Transforming org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog$1... 
Transforming org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog... 
Transforming org.apache.log4j.lf5.viewer.LogFactor5InputDialog$1... 
Transforming org.apache.log4j.lf5.viewer.LogFactor5InputDialog$2... 
Transforming org.apache.log4j.lf5.viewer.LogFactor5InputDialog$3... 
Transforming org.apache.log4j.lf5.viewer.LogFactor5InputDialog... 
Transforming org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog... 
Transforming org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener... 
Transforming org.apache.log4j.lf5.viewer.LogTable... 
Transforming org.apache.log4j.lf5.viewer.LogTableColumn... 
Transforming org.apache.log4j.lf5.viewer.LogTableColumnFormatException... 
Transforming org.apache.log4j.lf5.viewer.LogTableModel... 
Transforming org.apache.log4j.lf5.viewer.LogTableRowRenderer... 
Transforming org.apache.log4j.lf5.viewer.TrackingAdjustmentListener... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryElement... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerLogRecordFilter... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel$1... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree$1... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$1... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$3... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$4... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$5... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$6... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$7... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$8... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditorRenderer... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath... 
Transforming org.apache.log4j.lf5.viewer.categoryexplorer.TreeModelAdapter... 
Transforming org.apache.log4j.lf5.viewer.configure.ConfigurationManager... 
Transforming org.apache.log4j.lf5.viewer.configure.MRUFileManager... 
Transforming org.apache.log4j.net.DefaultEvaluator... 
Transforming org.apache.log4j.net.JMSAppender... 
Transforming org.apache.log4j.net.JMSSink... 
Transforming org.apache.log4j.net.SMTPAppender$1... 
Transforming org.apache.log4j.net.SMTPAppender... 
Transforming org.apache.log4j.net.SimpleSocketServer... 
Transforming org.apache.log4j.net.SocketAppender$Connector... 
Transforming org.apache.log4j.net.SocketAppender... 
Transforming org.apache.log4j.net.SocketHubAppender$ServerMonitor... 
Transforming org.apache.log4j.net.SocketHubAppender... 
Transforming org.apache.log4j.net.SocketNode... 
Transforming org.apache.log4j.net.SocketServer... 
Transforming org.apache.log4j.net.SyslogAppender... 
Transforming org.apache.log4j.net.TelnetAppender$SocketHandler... 
Transforming org.apache.log4j.net.TelnetAppender... 
Transforming org.apache.log4j.net.ZeroConfSupport... 
Transforming org.apache.log4j.nt.NTEventLogAppender... 
Transforming org.apache.log4j.or.DefaultRenderer... 
Transforming org.apache.log4j.or.ObjectRenderer... 
Transforming org.apache.log4j.or.RendererMap... 
Transforming org.apache.log4j.or.ThreadGroupRenderer... 
Transforming org.apache.log4j.or.jms.MessageRenderer... 
Transforming org.apache.log4j.or.sax.AttributesRenderer... 
Transforming org.apache.log4j.pattern.BridgePatternConverter... 
Transforming org.apache.log4j.pattern.BridgePatternParser... 
Transforming org.apache.log4j.pattern.CachedDateFormat... 
Transforming org.apache.log4j.pattern.ClassNamePatternConverter... 
Transforming org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat... 
Transforming org.apache.log4j.pattern.DatePatternConverter... 
Transforming org.apache.log4j.pattern.FileDatePatternConverter... 
Transforming org.apache.log4j.pattern.FileLocationPatternConverter... 
Transforming org.apache.log4j.pattern.FormattingInfo... 
Transforming org.apache.log4j.pattern.FullLocationPatternConverter... 
Transforming org.apache.log4j.pattern.IntegerPatternConverter... 
Transforming org.apache.log4j.pattern.LevelPatternConverter... 
Transforming org.apache.log4j.pattern.LineLocationPatternConverter... 
Transforming org.apache.log4j.pattern.LineSeparatorPatternConverter... 
Transforming org.apache.log4j.pattern.LiteralPatternConverter... 
Transforming org.apache.log4j.pattern.LogEvent... 
Transforming org.apache.log4j.pattern.LoggerPatternConverter... 
Transforming org.apache.log4j.pattern.LoggingEventPatternConverter... 
Transforming org.apache.log4j.pattern.MessagePatternConverter... 
Transforming org.apache.log4j.pattern.MethodLocationPatternConverter... 
Transforming org.apache.log4j.pattern.NDCPatternConverter... 
Transforming org.apache.log4j.pattern.NameAbbreviator$DropElementAbbreviator... 
Transforming org.apache.log4j.pattern.NameAbbreviator$MaxElementAbbreviator... 
Transforming org.apache.log4j.pattern.NameAbbreviator$NOPAbbreviator... 
Transforming org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator... 
Transforming org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment... 
Transforming org.apache.log4j.pattern.NameAbbreviator... 
Transforming org.apache.log4j.pattern.NamePatternConverter... 
Transforming org.apache.log4j.pattern.PatternConverter... 
Transforming org.apache.log4j.pattern.PatternParser$ReadOnlyMap... 
Transforming org.apache.log4j.pattern.PatternParser... 
Transforming org.apache.log4j.pattern.PropertiesPatternConverter... 
Transforming org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp... 
Transforming org.apache.log4j.pattern.RelativeTimePatternConverter... 
Transforming org.apache.log4j.pattern.SequenceNumberPatternConverter... 
Transforming org.apache.log4j.pattern.ThreadPatternConverter... 
Transforming org.apache.log4j.pattern.ThrowableInformationPatternConverter... 
Transforming org.apache.log4j.rewrite.MapRewritePolicy... 
Transforming org.apache.log4j.rewrite.PropertyRewritePolicy... 
Transforming org.apache.log4j.rewrite.ReflectionRewritePolicy... 
Transforming org.apache.log4j.rewrite.RewriteAppender... 
Transforming org.apache.log4j.rewrite.RewritePolicy... 
Transforming org.apache.log4j.spi.AppenderAttachable... 
Transforming org.apache.log4j.spi.Configurator... 
Transforming org.apache.log4j.spi.DefaultRepositorySelector... 
Transforming org.apache.log4j.spi.ErrorCode... 
Transforming org.apache.log4j.spi.ErrorHandler... 
Transforming org.apache.log4j.spi.Filter... 
Transforming org.apache.log4j.spi.HierarchyEventListener... 
Transforming org.apache.log4j.spi.LocationInfo... 
Transforming org.apache.log4j.spi.LoggerFactory... 
Transforming org.apache.log4j.spi.LoggerRepository... 
Transforming org.apache.log4j.spi.LoggingEvent... 
Transforming org.apache.log4j.spi.NOPLogger... 
Transforming org.apache.log4j.spi.NOPLoggerRepository... 
Transforming org.apache.log4j.spi.NullWriter... 
Transforming org.apache.log4j.spi.OptionHandler... 
Transforming org.apache.log4j.spi.RendererSupport... 
Transforming org.apache.log4j.spi.RepositorySelector... 
Transforming org.apache.log4j.spi.RootCategory... 
Transforming org.apache.log4j.spi.RootLogger... 
Transforming org.apache.log4j.spi.ThrowableInformation... 
Transforming org.apache.log4j.spi.ThrowableRenderer... 
Transforming org.apache.log4j.spi.ThrowableRendererSupport... 
Transforming org.apache.log4j.spi.TriggeringEventEvaluator... 
Transforming org.apache.log4j.spi.VectorWriter... 
Transforming org.apache.log4j.varia.DenyAllFilter... 
Transforming org.apache.log4j.varia.ExternallyRolledFileAppender... 
Transforming org.apache.log4j.varia.FallbackErrorHandler... 
Transforming org.apache.log4j.varia.HUP... 
Transforming org.apache.log4j.varia.HUPNode... 
Transforming org.apache.log4j.varia.LevelMatchFilter... 
Transforming org.apache.log4j.varia.LevelRangeFilter... 
Transforming org.apache.log4j.varia.NullAppender... 
Transforming org.apache.log4j.varia.ReloadingPropertyConfigurator... 
Transforming org.apache.log4j.varia.Roller... 
Transforming org.apache.log4j.varia.StringMatchFilter... 
Transforming org.apache.log4j.xml.DOMConfigurator$1... 
Transforming org.apache.log4j.xml.DOMConfigurator$2... 
Transforming org.apache.log4j.xml.DOMConfigurator$3... 
Transforming org.apache.log4j.xml.DOMConfigurator$4... 
Transforming org.apache.log4j.xml.DOMConfigurator$5... 
Transforming org.apache.log4j.xml.DOMConfigurator$ParseAction... 
Transforming org.apache.log4j.xml.DOMConfigurator... 
Transforming org.apache.log4j.xml.Log4jEntityResolver... 
Transforming org.apache.log4j.xml.SAXErrorHandler... 
Transforming org.apache.log4j.xml.UnrecognizedElementHandler... 
Transforming org.apache.log4j.xml.XMLLayout... 
Transforming org.apache.log4j.xml.XMLWatchdog... 
Soot finished on Mon Jul 08 10:14:02 CEST 2013
Soot has run for 0 min. 13 sec.
